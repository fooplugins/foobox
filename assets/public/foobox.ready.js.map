{"version":3,"file":"foobox.ready.js","mappings":"2GACA,IAAIA,EAAU,K,eAMLC,EAAAA,EAAAA,WAAUD,KACXA,EAAU,IAAIE,SAASC,IACnBC,YAAW,KACqB,YAAxBC,SAASC,WAA0BH,IAClCE,SAASE,iBAAiB,mBAAoBJ,GAAU,EAAM,GACpE,EAAE,KAGNH,GCbAQ,MAAK,IAAKC,EAAAA,EAAAA,KAAaC,EAAAA,EAAOC,S","sources":["webpack://foobox/./src/utils/domReady.js","webpack://foobox/./src/public/foobox.ready/index.js"],"sourcesContent":["import {isPromise} from \"./is.js\";\r\nlet promise = null;\r\n/**\r\n * Returns a promise that is resolved once the DOMContentLoaded event has been fired. Multiple calls to this method will return the same promise.\r\n * @returns {Promise}\r\n */\r\nfunction domReady(){\r\n    if (!isPromise(promise)){\r\n        promise = new Promise((resolved) => {\r\n            setTimeout(()=>{\r\n                if (document.readyState !== \"loading\") resolved();\r\n                else document.addEventListener('DOMContentLoaded', resolved, false);\r\n            }, 0);\r\n        });\r\n    }\r\n    return promise;\r\n}\r\n\r\nexport default domReady;","import domReady from \"../../utils/domReady\";\r\nimport FooBox from \"../foobox\";\r\ndomReady().then(()=> FooBox.init( global.FOOBOX ));\r\n"],"names":["promise","isPromise","Promise","resolved","setTimeout","document","readyState","addEventListener","then","FooBox","global","FOOBOX"],"sourceRoot":""}