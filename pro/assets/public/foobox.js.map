{"version":3,"file":"foobox.js","mappings":"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ChH,MAAM,CAAC,CAACwU,aAAa,EAAEjT,GAAG,KAAK;IAC3E,OAAO+S,UAAU,CAACxD,IAAI,CAAC,IAAI,EAAE0D,aAAa,EAAExN,MAAM,CAACzF,GAAG,CAAC,EAAEA,GAAG,CAAC;EACjE,CAAC,EAAEgT,YAAY,CAAC,GAAGA,YAAY;AACnC;;;;;;;;;;;;ACtOA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack://foobox/./src/public/foobox/Container.js","webpack://foobox/./src/public/foobox/GroupParser.js","webpack://foobox/./src/public/foobox/Item.js","webpack://foobox/./src/public/foobox/Parser.js","webpack://foobox/./src/public/foobox/Plugin.js","webpack://foobox/./src/public/foobox/PropertyParser.js","webpack://foobox/./src/public/foobox/TypeParser.js","webpack://foobox/./src/public/foobox/index.pro.js","webpack://foobox/./src/public/foobox/modal/index.js","webpack://foobox/./src/public/foobox/modal/inner/index.js","webpack://foobox/./src/public/foobox/modal/items/index.js","webpack://foobox/./src/public/foobox/modal/items/item/caption/index.js","webpack://foobox/./src/public/foobox/modal/items/item/image/index.js","webpack://foobox/./src/public/foobox/modal/items/item/index.js","webpack://foobox/./src/public/foobox/modal/overlay/index.js","webpack://foobox/./src/utils/Emitter.js","webpack://foobox/./src/utils/EmitterEvent.js","webpack://foobox/./src/utils/debounce.js","webpack://foobox/./src/utils/getResizeObserverEntrySize.js","webpack://foobox/./src/utils/iasync.js","webpack://foobox/./src/utils/index.js","webpack://foobox/./src/utils/is.js","webpack://foobox/./src/utils/makeSelector.js","webpack://foobox/./src/utils/mergeArray.js","webpack://foobox/./src/utils/object.js","webpack://foobox/./src/public/foobox/modal/index.scss?5ef9","webpack://foobox/./src/public/foobox/modal/inner/index.scss?735b","webpack://foobox/./src/public/foobox/modal/items/index.scss?d5a2","webpack://foobox/./src/public/foobox/modal/items/item/caption/index.scss?6ccf","webpack://foobox/./src/public/foobox/modal/items/item/image/index.scss?4d42","webpack://foobox/./src/public/foobox/modal/items/item/index.scss?9060","webpack://foobox/./src/public/foobox/modal/overlay/index.scss?21ff","webpack://foobox/webpack/bootstrap","webpack://foobox/webpack/runtime/chunk loaded","webpack://foobox/webpack/runtime/define property getters","webpack://foobox/webpack/runtime/global","webpack://foobox/webpack/runtime/hasOwnProperty shorthand","webpack://foobox/webpack/runtime/make namespace object","webpack://foobox/webpack/runtime/jsonp chunk loading","webpack://foobox/webpack/before-startup","webpack://foobox/webpack/startup","webpack://foobox/webpack/after-startup"],"sourcesContent":["import { extend } from \"../../utils/object\";\r\nimport { isNumber } from \"../../utils/is\";\r\n\r\n/**\r\n * A simple class containing the results of parsing a reference object.\r\n */\r\nexport default class Container {\r\n\r\n    /**\r\n     * A reference to the parser that produced this result.\r\n     * @type {Parser}\r\n     */\r\n    parser;\r\n\r\n    /**\r\n     * The reference object parsed.\r\n     * @type {*}\r\n     */\r\n    ref;\r\n\r\n    /**\r\n     * An object containing any parsed options.\r\n     * @type {object}\r\n     */\r\n    options;\r\n\r\n    /**\r\n     * @type {?EventTarget}\r\n     * @private\r\n     */\r\n    #triggerTarget = null;\r\n\r\n    /**\r\n     * An array of all parsed items.\r\n     * @type {Item[]}\r\n     */\r\n    items = [];\r\n\r\n    /**\r\n     * Create a new instance of the Container class.\r\n     * @param {Parser} parser - A reference to the parser that produced this container.\r\n     * @param {*} ref - The reference object parsed.\r\n     * @param {object} [options] - An object containing any parsed options.\r\n     * @param {?EventTarget} [triggerTarget] - The EventTarget instance that triggers the modal.\r\n     */\r\n    constructor( parser, ref, options, triggerTarget ) {\r\n        this.parser = parser;\r\n        this.ref = ref;\r\n        this.options = extend( {}, options );\r\n        if ( triggerTarget instanceof EventTarget ){\r\n            this.#triggerTarget = triggerTarget;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The EventTarget instance that triggers the modal.\r\n     * @returns {?EventTarget}\r\n     */\r\n    get triggerTarget(){\r\n        return this.#triggerTarget;\r\n    }\r\n\r\n    /**\r\n     * @param {EventTarget} value - The EventTarget instance to use as the trigger.\r\n     */\r\n    set triggerTarget( value ){\r\n        if ( value instanceof EventTarget ){\r\n            this.#triggerTarget = value;\r\n            return;\r\n        }\r\n        throw new TypeError( \"The Container.triggerTarget property must be an instance of EventTarget.\" );\r\n    }\r\n\r\n    get firstIndex(){\r\n        return this.items.length ? 0 : -1;\r\n    }\r\n\r\n    get lastIndex(){\r\n        return this.items.length ? this.items.length - 1 : -1;\r\n    }\r\n\r\n    withinRange( index ){\r\n        return isNumber( index ) && index >= this.firstIndex && index <= this.lastIndex;\r\n    }\r\n\r\n    getByIndex( index ){\r\n        return this.withinRange( index ) ? this.items[ index ] : null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {?Item}\r\n     */\r\n    getFirst(){\r\n        return this.firstIndex !== -1 ? this.items[ this.firstIndex ] : null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {?Item}\r\n     */\r\n    getLast(){\r\n        return this.lastIndex !== -1 ? this.items[ this.lastIndex ] : null;\r\n    }\r\n\r\n    getNext( current, allowLoop ){\r\n        const index = this.items.indexOf( current );\r\n        if ( index !== -1 ){\r\n            let nextIndex = index + 1;\r\n            const withinRange = this.withinRange( nextIndex );\r\n            if ( withinRange ){\r\n                return this.items[ nextIndex ];\r\n            }\r\n            if ( !withinRange && allowLoop ){\r\n                return this.getFirst();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getPrevious( current, allowLoop ){\r\n        const index = this.items.indexOf( current );\r\n        if ( index !== -1 ){\r\n            let previousIndex = index - 1;\r\n            const withinRange = this.withinRange( previousIndex );\r\n            if ( withinRange ){\r\n                return this.items[ previousIndex ];\r\n            }\r\n            if ( !withinRange && allowLoop ){\r\n                return this.getLast();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get [ Symbol.toStringTag ]() {\r\n        return \"Container\";\r\n    }\r\n}","import {isStringNotEmpty} from \"../../utils/is\";\r\nimport {asyncForEach} from \"../../utils/iasync\";\r\nimport Parser, { PARSER_DEFAULTS, PARSER_DEFAULTS_PRO } from \"./Parser\";\r\nimport Container from \"./Container\";\r\n\r\n//region type-definitions\r\n\r\n/**\r\n * @typedef {Parser~Configuration} GroupParser~Configuration\r\n * @property {number} [priority=99]\r\n */\r\n\r\n//endregion\r\n\r\nexport const GROUP_PARSER_DEFAULTS = {\r\n    ...PARSER_DEFAULTS,\r\n    priority: 99,\r\n    include: []\r\n};\r\n\r\nexport const GROUP_PARSER_DEFAULTS_PRO = {\r\n    ...PARSER_DEFAULTS_PRO,\r\n    priority: 99,\r\n    include: []\r\n};\r\n\r\nexport default class GroupParser extends Parser {\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    async parseDocument( handledRefs, nocache ) {\r\n        const results = [];\r\n        await asyncForEach( this.config.include, ( selector ) => {\r\n            if ( !handledRefs.has( selector ) ){\r\n                const container = this.parse( selector, handledRefs, nocache );\r\n                if ( container && container.items.length ){\r\n                    results.push( container );\r\n                    handledRefs.add( selector );\r\n                }\r\n            }\r\n        } );\r\n        this.purgeCache( results );\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    shouldPurge( container ) {\r\n        return container.items.length === 0;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    create( ref, options, trigger ){\r\n        if ( isStringNotEmpty( ref ) ){\r\n            return new Container( this, ref, options, trigger );\r\n        }\r\n        return super.create( ref, options, trigger );\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    getArgs( ref, nocache ) {\r\n        if ( isStringNotEmpty( ref ) ){\r\n            return { trigger: null, options: {}, itemRefs: document.querySelectorAll( ref ) };\r\n        }\r\n        return super.getArgs( ref, nocache );\r\n    }\r\n\r\n}","/**\r\n * A simple class containing the results of a parsed item.\r\n */\r\nexport default class Item {\r\n    /**\r\n     * A reference to the parent container this item belongs to.\r\n     */\r\n    parent;\r\n\r\n    /**\r\n     * A reference to the type parser that produced this item.\r\n     * @type {TypeParser}\r\n     */\r\n    type;\r\n\r\n    /**\r\n     * The reference object parsed.\r\n     * @type {*}\r\n     */\r\n    ref;\r\n\r\n    /**\r\n     * An object containing all required properties for the item.\r\n     * @type {object}\r\n     */\r\n    requiredProperties;\r\n\r\n    /**\r\n     * @type {?EventTarget}\r\n     * @private\r\n     */\r\n    #triggerTarget = null;\r\n\r\n    /**\r\n     * Create a new instance of the ParserItem class.\r\n     * @param {Container} parent - A reference to the parent container this item belongs to.\r\n     * @param {TypeParser} type - A reference to the type parser that produced this item.\r\n     * @param {*} ref - The reference object parsed.\r\n     * @param {?EventTarget} [triggerTarget] - The EventTarget instance that triggers this item.\r\n     */\r\n    constructor(parent, type, ref, triggerTarget) {\r\n        this.parent = parent;\r\n        this.type = type;\r\n        this.ref = ref;\r\n        if ( triggerTarget instanceof EventTarget ){\r\n            this.#triggerTarget = triggerTarget;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The EventTarget instance that triggers this item.\r\n     * @returns {?EventTarget}\r\n     */\r\n    get triggerTarget(){\r\n        return this.#triggerTarget;\r\n    }\r\n\r\n    /**\r\n     * @param {EventTarget} value - The EventTarget instance to use as the trigger.\r\n     */\r\n    set triggerTarget( value ){\r\n        if ( value instanceof EventTarget ){\r\n            this.#triggerTarget = value;\r\n            return;\r\n        }\r\n        throw new TypeError( \"The Item.trigger property must be an instance of EventTarget!\" );\r\n    }\r\n\r\n    /**\r\n     * Get all properties for this item.\r\n     * @param {boolean} [nocache=false]\r\n     * @returns {object}\r\n     */\r\n    getProperties( nocache ){\r\n        const properties = this.type.getProperties( this.ref, nocache );\r\n        return { ...properties, type: this.type.name };\r\n    }\r\n\r\n    #properties;\r\n\r\n    get properties(){\r\n        if ( !this.#properties ){\r\n            this.#properties = this.getProperties();\r\n        }\r\n        return this.#properties;\r\n    }\r\n}","import {objReduce} from \"../../utils/object\";\r\nimport {isFunction, isPlainObject, isStringNotEmpty} from \"../../utils/is\";\r\nimport makeSelector from \"../../utils/makeSelector\";\r\nimport Emitter from \"../../utils/Emitter\";\r\nimport {asyncForEach} from \"../../utils/iasync\";\r\nimport TypeParser from \"./TypeParser\";\r\nimport Container from \"./Container\";\r\n\r\n//region type-definitions\r\n\r\n/**\r\n * @callback Parser~ctor\r\n * @param {Plugin} plugin\r\n * @param {string} name\r\n * @returns Parser\r\n */\r\n/**\r\n * @typedef {object} ParserDefinition\r\n * @property {string} name\r\n * @property {Parser~ctor} ctor\r\n */\r\n/**\r\n * If just a string, a new instance of the default parser is registered using the new name. If an array, the first element is the name, the second is the custom parser constructor.\r\n * @typedef {string|[string,Parser~ctor]} parserDefinition\r\n */\r\n/**\r\n * @typedef {object} Parser~Configuration\r\n * @property {typeParserDefinition[]} [__types__]\r\n * @property {number} [priority=49]\r\n * @property {string[]} [include]\r\n * @property {string[]} [exclude]\r\n * @property {{options:?string,items:?string}} [data]\r\n * @property {propertyParserDefinition[]} [defaultProperties]\r\n */\r\n/**\r\n * @typedef {object} ParserChange\r\n * @property {Item[]} added\r\n * @property {Item[]} removed\r\n */\r\n\r\n//endregion\r\n\r\nexport const PARSER_DEFAULTS = {\r\n    __types__: [\"image\",\"iframe\"],\r\n    priority: 49,\r\n    include: [\".foobox,[data-foobox],[data-foobox-items]\"],\r\n    exclude: [\".nolightbox\"],\r\n    data: {\r\n        options: \"foobox\",\r\n        items: \"fooboxItems\",\r\n    },\r\n    defaultProperties: [{\r\n        name: \"src\",\r\n        obj: [\"src\",\"url\",\"href\"],\r\n        elem: [\"data:src\",\"data:href\",\"data:url\",\"href\"],\r\n        required: true,\r\n        test: isStringNotEmpty\r\n    },{\r\n        name: \"title\",\r\n        obj: [\"title\"],\r\n        elem: [\"data:title\", \"title\", \"img/title\"],\r\n        test: isStringNotEmpty\r\n    },{\r\n        name: \"description\",\r\n        obj: [\"description\"],\r\n        elem: [\"data:description\", \"img/alt\"],\r\n        test: isStringNotEmpty\r\n    },{\r\n        name: \"width\",\r\n        obj: [\"width\"],\r\n        elem: [\"data:width\"]\r\n    },{\r\n        name: \"height\",\r\n        obj: [\"height\"],\r\n        elem: [\"data:height\"]\r\n    },{\r\n        name: \"aspectRatio\",\r\n        obj: [\"aspectRatio\"],\r\n        elem: [\"data:aspectRatio\"]\r\n    }],\r\n    image: {\r\n        priority: 10,\r\n        include: [\r\n            \"[href^='http'][href*='.svg']\",\r\n            \"[href^='http'][href*='.png']\",\r\n            \"[href^='http'][href*='.jpg']\",\r\n            \"[href^='http'][href*='.jpeg']\",\r\n            \"[href^='http'][href*='.webp']\",\r\n            \"[href^='http'][href*='.gif']\",\r\n            \"[href^='http'][href*='.bmp']\",\r\n            \"[href^='http'][href*='fakeimg.pl']\",\r\n            \"[href^='http'].foobox-image\"\r\n        ],\r\n        exclude: [],\r\n        properties: [{\r\n            name: \"srcset\",\r\n            obj: [\"srcset\"],\r\n            elem: [\"data:srcset\"],\r\n            test: isStringNotEmpty\r\n        }]\r\n    },\r\n    iframe: {\r\n        priority: 20,\r\n        include: [\r\n            \"[href^='http'][target='foobox']\",\r\n            \"[href^='http'].foobox-iframe\"\r\n        ],\r\n        exclude: []\r\n    }\r\n};\r\n\r\nexport const PARSER_DEFAULTS_PRO = {\r\n    ...PARSER_DEFAULTS,\r\n    __types__: [\r\n        ...PARSER_DEFAULTS.__types__,\r\n        \"video\"\r\n    ],\r\n    video: {\r\n        priority: 15,\r\n        include: [\r\n            \"[href^='http'][href*='youtube.com/watch']\",\r\n            \"[href^='http'][href*='youtube.com/v']\",\r\n            \"[href^='http'][href*='youtube.com/embed']\",\r\n            \"[href^='http'][href*='youtube-nocookie.com/watch']\",\r\n            \"[href^='http'][href*='youtube-nocookie.com/v']\",\r\n            \"[href^='http'][href*='youtube-nocookie.com/embed']\",\r\n            \"[href^='http'][href*='youtu.be/']\",\r\n            \"[href^='http'][href*='vimeo.com/']:not([href*='vimeo.com/user'])\",\r\n            \"[href^='http'][href*='.mp4']\",\r\n            \"[href^='http'][href*='.ogv']\",\r\n            \"[href^='http'][href*='.wmv']\",\r\n            \"[href^='http'][href*='.webm']\"\r\n        ],\r\n        properties: [{\r\n            name: \"cover\",\r\n            obj: [\"cover\"],\r\n            elem: [\"data:cover\"],\r\n            test: isStringNotEmpty\r\n        }]\r\n    }\r\n};\r\n\r\n/**\r\n * The base parser class.\r\n * @class\r\n */\r\nexport default class Parser extends Emitter {\r\n\r\n    //region static\r\n\r\n    /**\r\n     * @param {parserDefinition} configuration\r\n     * @returns {?ParserDefinition}\r\n     */\r\n    static DEFINITION( configuration ){\r\n        if ( isStringNotEmpty( configuration ) ){\r\n            return { name: /** @type string */ configuration, ctor: /** @type Parser~ctor */ Parser };\r\n        }\r\n        if ( Array.isArray( configuration ) && configuration.length === 2 && isStringNotEmpty( configuration[0] ) && isFunction( configuration[1] ) ){\r\n            return { name: configuration[0], ctor: configuration[1] };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Plugin} plugin\r\n     * @param {parserDefinition} definition\r\n     * @returns {?Parser}\r\n     */\r\n    static create( plugin, definition ){\r\n        const def = Parser.DEFINITION( definition );\r\n        return def ? new def.ctor( plugin, def.name ) : null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Plugin} plugin\r\n     * @param {parserDefinition[]} parserDefinitions\r\n     * @returns {Parser[]}\r\n     */\r\n    static createAll( plugin, parserDefinitions ){\r\n        return parserDefinitions.reduce( ( result, config ) => {\r\n            const parser = Parser.create( plugin, config );\r\n            if ( parser ) result.push( parser );\r\n            return result;\r\n        },/** @type {Parser[]} */ [] ).sort( ( a, b ) => a.priority - b.priority );\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region constructor\r\n\r\n    /**\r\n     * Create a new instance of the Parser class.\r\n     * @param {Plugin} plugin - The parent for this instance.\r\n     * @param {string} name - The name the parser was registered with.\r\n     */\r\n    constructor( plugin, name ) {\r\n        super( { bubbles: true }, plugin );\r\n        this.#plugin = plugin;\r\n        this.#name = name;\r\n        this.#priority = this.config.priority;\r\n        this.#includeSelector = makeSelector( this.config.include );\r\n        this.#excludeSelector = makeSelector( this.config.exclude );\r\n        this.#types = TypeParser.createAll( this, this.config.__types__ );\r\n        this.#typesSelector = makeSelector( this.#types.map( ( type ) => type.includeSelector ) );\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region properties\r\n\r\n    /**\r\n     * The private field used by the 'plugin' read-only property.\r\n     * @type {Plugin}\r\n     * @private\r\n     */\r\n    #plugin;\r\n    /**\r\n     * Get the plugin for the parser.\r\n     * @type {Plugin}\r\n     * @readonly\r\n     */\r\n    get plugin(){\r\n        return this.#plugin;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the 'name' read-only property.\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    #name;\r\n    /**\r\n     * Get the name the parser was registered with.\r\n     * @type {string}\r\n     */\r\n    get name(){\r\n        return this.#name;\r\n    }\r\n\r\n    /**\r\n     * The current parser configuration.\r\n     * @type {Parser~Configuration}\r\n     * @readonly\r\n     */\r\n    get config(){\r\n        if ( isPlainObject( this.plugin.config[ this.name ] ) ){\r\n            return this.plugin.config[ this.name ];\r\n        }\r\n        return this.plugin.config[ this.name ] = { __types__: [] };\r\n    }\r\n\r\n    /**\r\n     * The private field used by the 'priority' read-only property.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    #priority;\r\n    /**\r\n     * Get the priority.\r\n     * @type {number}\r\n     * @readonly\r\n     */\r\n    get priority(){\r\n        return this.#priority;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the 'includeSelector' read-only property.\r\n     * @type {?string}\r\n     * @private\r\n     */\r\n    #includeSelector;\r\n    /**\r\n     * Get the result of combining all configured include selectors into one.\r\n     * @type {?string}\r\n     * @readonly\r\n     */\r\n    get includeSelector(){\r\n        return this.#includeSelector;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the 'excludeSelector' read-only property.\r\n     * @type {?string}\r\n     * @private\r\n     */\r\n    #excludeSelector;\r\n    /**\r\n     * Get the result of combining all configured exclude selectors into one.\r\n     * @type {?string}\r\n     * @readonly\r\n     */\r\n    get excludeSelector(){\r\n        return this.#excludeSelector;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @type {TypeParser[]}\r\n     */\r\n    #types = [];\r\n\r\n    /**\r\n     * The private field used by the 'typesSelector' read-only property.\r\n     * @type {?string}\r\n     * @private\r\n     */\r\n    #typesSelector;\r\n    /**\r\n     * Get the result of combining all configured type parser include selectors into one.\r\n     * @type {?string}\r\n     * @readonly\r\n     */\r\n    get typesSelector(){\r\n        return this.#typesSelector;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @type {Map<*, Container>}\r\n     */\r\n    #containerCache = new Map();\r\n    /**\r\n     *\r\n     * @type {Map<*, object>}\r\n     */\r\n    #dataCache = new Map();\r\n\r\n    /**\r\n     * Whether the parseDocument method should be called.\r\n     * @type {boolean}\r\n     * @readonly\r\n     */\r\n    get isDocumentParser(){ return true; }\r\n\r\n    //endregion\r\n\r\n    //region methods\r\n\r\n    /**\r\n     * Checks if the supplied reference is included by this instance.\r\n     * NOTE: This DOES NOT check for exclusions! Use the canParse method if you want to check if a reference is both included AND NOT excluded.\r\n     * @param {*} ref - The object to test.\r\n     * @returns {boolean}\r\n     */\r\n    includes( ref ){\r\n        if ( ref instanceof HTMLElement ){\r\n            return this.includeSelector !== null && ref.matches( this.includeSelector );\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the supplied reference is excluded by this instance.\r\n     * @param {*} ref - The object to test.\r\n     * @returns {boolean}\r\n     */\r\n    excludes( ref ){\r\n        if ( ref instanceof HTMLElement ){\r\n            return this.excludeSelector !== null && ref.matches( this.excludeSelector );\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the supplied reference can be parsed by this instance.\r\n     * @param {*} ref - The object to test.\r\n     * @returns {boolean}\r\n     */\r\n    canParse( ref ){\r\n        return this.includes( ref ) && !this.excludes( ref );\r\n    }\r\n\r\n    /**\r\n     * Gets any configured data for an element reference.\r\n     * @param {HTMLElement} ref\r\n     * @param {boolean} [nocache=false]\r\n     * @returns {Object}\r\n     */\r\n    data( ref, nocache ){\r\n        if ( !nocache && this.#dataCache.has( ref ) ){\r\n            return this.#dataCache.get( ref );\r\n        }\r\n        const dataConfig = this.config.data;\r\n        const result = objReduce( dataConfig, ( result, dataName, key ) => {\r\n            if ( isStringNotEmpty( dataName ) && ref.dataset.hasOwnProperty( dataName ) ){\r\n                let data;\r\n                try {\r\n                    data = JSON.parse( ref.dataset[ dataName ] );\r\n                } catch ( err ) {\r\n                    console.error( `Invalid dataset.${dataName} JSON string supplied.`, ref.dataset, dataName, err );\r\n                    data = null; // cache a null for errors so they will only be triggered again when the cache is flushed\r\n                } finally {\r\n                    result[ key ] = data;\r\n                }\r\n            } else {\r\n                result[ key ] = null;\r\n            }\r\n            return result;\r\n        }, {} );\r\n        this.#dataCache.set( ref, result );\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Parses the document and returns an array of new Containers.\r\n     * @param {Set<*>} [handledRefs] - A collection of all references already handled by the plugin.\r\n     * @param {boolean} [nocache=false] - If set to true any internal caching mechanisms are ignored and subsequently updated with freshly parsed values.\r\n     * @returns {Promise<Container[]>}\r\n     */\r\n    async parseDocument( handledRefs, nocache ){\r\n        const results = [];\r\n        for ( const selector of this.config.include ){\r\n            await asyncForEach( document.querySelectorAll( selector ), ( ref ) => {\r\n                if ( handledRefs.has(ref) || this.excludes( ref ) ) return;\r\n                const container = this.parse( ref, handledRefs, nocache );\r\n                if ( !container ) return;\r\n                results.push( container );\r\n                handledRefs.add( ref );\r\n            });\r\n        }\r\n        this.purgeCache( results );\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * Purges the internal cache given the results of the last parseDocument call.\r\n     * @param {Container[]} results\r\n     */\r\n    purgeCache( results ){\r\n        for ( const container of this.#containerCache.values() ){\r\n            if ( !results.includes( container ) || this.shouldPurge( container ) ){\r\n                this.#containerCache.delete( container.ref );\r\n                this.trigger( \"removed-container\", [ container ] );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if a container should be purged from cache.\r\n     * @param {Container} container\r\n     * @returns {boolean}\r\n     */\r\n    shouldPurge( container ){\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} ref\r\n     * @param {boolean} [nocache=false]\r\n     * @returns {{itemRefs:Iterable, options:object, trigger:?EventTarget}}\r\n     */\r\n    getArgs( ref, nocache ){\r\n        let trigger = null, itemRefs = [], options = {};\r\n        if ( ref instanceof HTMLElement ){\r\n            const data = this.data( ref, nocache );\r\n            if ( isPlainObject( data.options ) ){\r\n                options = data.options;\r\n            }\r\n            if ( Array.isArray( data.items ) ){\r\n                trigger = ref;\r\n                itemRefs.push( ...data.items );\r\n            } else {\r\n                if ( ref.matches( this.typesSelector ) ){\r\n                    itemRefs.push( ref );\r\n                }\r\n                itemRefs.push( ...ref.querySelectorAll( this.typesSelector ) );\r\n            }\r\n        }\r\n        return { options, itemRefs, trigger };\r\n    }\r\n\r\n    /**\r\n     * Create a new container\r\n     * @param {*} ref\r\n     * @param {object} [options]\r\n     * @param {?EventTarget} [trigger]\r\n     * @returns {?Container}\r\n     */\r\n    create( ref, options, trigger ){\r\n        if ( ref instanceof HTMLElement ){\r\n            return new Container( this, ref, options, trigger );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parses the supplied reference object and returns a new Container.\r\n     * @param {*} ref - The object to parse.\r\n     * @param {Set<*>} [handledRefs] - A collection of all references already handled by the plugin.\r\n     * @param {boolean} [nocache=false] - If set to true any internal caching mechanisms are ignored and subsequently updated with freshly parsed values.\r\n     * @returns {Container|null}\r\n     */\r\n    parse( ref, handledRefs, nocache ){\r\n        const { itemRefs, options, trigger } = this.getArgs( ref, nocache );\r\n        let container, cached = false;\r\n        if ( this.#containerCache.has( ref ) ){\r\n            container = this.#containerCache.get( ref );\r\n            cached = true;\r\n        } else {\r\n            container = this.create( ref, options, trigger );\r\n        }\r\n        if ( container instanceof Container ){\r\n            const items = this.parseItems( container, itemRefs, handledRefs, nocache );\r\n            if ( cached ){\r\n                // compare items\r\n                const changes = this.compareItems( items, container.items );\r\n                container.items.length = 0;\r\n                container.items.push( ...items );\r\n                if ( changes.added.length > 0 || changes.removed.length > 0 ){\r\n                    this.trigger( \"updated-container\", [ container, changes ] );\r\n                }\r\n            } else {\r\n                container.items.push( ...items );\r\n                this.trigger( \"added-container\", [ container ] );\r\n            }\r\n            this.#containerCache.set( ref, container );\r\n        }\r\n        return container;\r\n    }\r\n\r\n    /**\r\n     * Parses the supplied iterable collection of objects and returns an array of new ContainerItems.\r\n     * @param {Container} parent - The parent container for the items.\r\n     * @param {Iterable} refs - An iterable collection of reference objects to parse.\r\n     * @param {Set<*>} [handledRefs] - A collection of all references already handled by the plugin.\r\n     * @param {boolean} [nocache=false] - If set to true any internal caching mechanisms are ignored and subsequently updated with freshly parsed values.\r\n     * @returns {Item[]}\r\n     */\r\n    parseItems( parent, refs, handledRefs, nocache ){\r\n        const results = [];\r\n        for ( const ref of refs ){\r\n            if ( handledRefs.has( ref ) || this.excludes( ref ) ) continue;\r\n            const item = this.parseItem( parent, ref, nocache );\r\n            if ( !item ) continue;\r\n            results.push( item );\r\n            handledRefs.add( ref );\r\n        }\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * Parses the supplied reference object and returns a new ContainerItem.\r\n     * @param {Container} parent - The parent container for the item.\r\n     * @param {*} ref - The object to parse.\r\n     * @param {boolean} [nocache=false] - If set to true any internal caching mechanisms are ignored and subsequently updated with freshly parsed values.\r\n     * @returns {Item|null} Returns null if parsing fails or no type can parse the reference object.\r\n     */\r\n    parseItem( parent, ref, nocache  ){\r\n        const type = this.#types.find( ( type ) => type.canParse( ref ) );\r\n        return type ? type.parse( parent, ref, nocache ) : null;\r\n    }\r\n\r\n    /**\r\n     * Compares a containers current items against its cached items and reports any changes.\r\n     * @param {Item[]} current\r\n     * @param {Item[]} cached\r\n     * @returns {ParserChange}\r\n     */\r\n    compareItems( current, cached ){\r\n        const removed = cached.filter( ( item ) => !current.includes( item ) );\r\n        const added = current.filter( ( item ) => !cached.includes( item ) );\r\n        return { removed, added };\r\n    }\r\n\r\n    //endregion\r\n}","import { defaults, extend } from \"../../utils/object\";\r\nimport { isFunction, isNumber, isString, isStringNotEmpty } from \"../../utils/is\";\r\nimport { asyncForEach } from \"../../utils/iasync\";\r\nimport Emitter from \"../../utils/Emitter\";\r\nimport Parser from \"./Parser\";\r\n\r\n/**\r\n * @extends Emitter\r\n */\r\nclass Plugin extends Emitter {\r\n\r\n    constructor( configuration ) {\r\n        super();\r\n        this.config = defaults( configuration, this.config );\r\n        this.on( {\r\n            \"added-container\": this.#onAddedContainer,\r\n            \"removed-container\": this.#onRemovedContainer,\r\n            \"updated-container\": this.#onUpdatedContainer\r\n        }, this );\r\n    }\r\n\r\n    //region Properties\r\n\r\n    /**\r\n     *\r\n     * @type {object}\r\n     */\r\n    config = { __parsers__: [] };\r\n\r\n    /**\r\n     *\r\n     * @type {MutationObserver|null}\r\n     */\r\n    #observer = null;\r\n\r\n    /**\r\n     *\r\n     * @type {Map<*, Container>}\r\n     */\r\n    #containers = new Map();\r\n\r\n    /**\r\n     *\r\n     * @type {Map<EventTarget, EventListener>}\r\n     */\r\n    #triggers = new Map();\r\n\r\n    /**\r\n     * Used to ensure multiple calls to the parseDocument method during parsing all return the same result instead of simply kicking off multiple parses.\r\n     * @type {Promise<Container[]>}\r\n     * @private\r\n     */\r\n    #parseDocument = null;\r\n\r\n    /**\r\n     *\r\n     * @type {Parser[]}\r\n     */\r\n    #parsers = [];\r\n\r\n    /**\r\n     *\r\n     * @type {Parser[]}\r\n     * @readonly\r\n     */\r\n    get __parsers__(){\r\n        return this.#parsers;\r\n    }\r\n\r\n    //endregion\r\n\r\n    //#region readyState\r\n\r\n    /**\r\n     * 0 - The plugin script has been evaluated but not yet initialized.\r\n     * @readonly\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    get RS_DEFAULT(){ return 0; }\r\n\r\n    /**\r\n     * 1 - The configuration has been set but components have not been loaded yet.\r\n     * @readonly\r\n     * @type {number}\r\n     * @default 1\r\n     */\r\n    get RS_INITIALIZING(){ return 1; }\r\n\r\n    /**\r\n     * 2 - The components are loaded but long-running tasks have not been run.\r\n     * @readonly\r\n     * @type {number}\r\n     * @default 2\r\n     */\r\n    get RS_INITIALIZED(){ return 2; }\r\n\r\n    /**\r\n     * 3 - Long-running tasks have completed. The plugin is now ready.\r\n     * @readonly\r\n     * @type {number}\r\n     * @default 3\r\n     */\r\n    get RS_READY(){ return 3; }\r\n\r\n    /**\r\n     *\r\n     * @type {number}\r\n     */\r\n    #readyStateValue = this.RS_DEFAULT;\r\n\r\n    /**\r\n     * Get the current readyState\r\n     * @readonly\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    get readyState(){\r\n        return this.#readyStateValue;\r\n    }\r\n\r\n    /**\r\n     * Set the readyState value and trigger the \"readystatechange\" event.\r\n     * @private\r\n     * @param {number} value\r\n     * @fires Document#foobox-readystatechange\r\n     * @fires Plugin#readystatechange\r\n     * @throws {TypeError} Throws a TypeError if the value is not a number.\r\n     * @throws {RangeError} Throws a RangeError if the value is less than the current value or more than the RS_READY value.\r\n     */\r\n    set #readyState( value ){\r\n        if ( this.#readyStateValue === value ) return; // do nothing\r\n        if ( !isNumber( value ) ) throw new TypeError( \"The 'value' argument must be a number.\" );\r\n        if ( value < this.#readyStateValue ) throw new RangeError( \"The 'value' argument can't be less than the current readyState.\" );\r\n        if ( value > this.RS_READY ) throw new RangeError( \"The 'value' argument can't be more than the RS_READY value.\" );\r\n        this.#readyStateValue = value;\r\n        /**\r\n         * Occurs whenever the readyState is changed.\r\n         * @event Document#foobox-readystatechange\r\n         * @param {CustomEvent} event - The readyState value can be accessed using the CustomEvent.detail property which is set to the plugin instance. e.g. event.detail.readyState\r\n         */\r\n        this.documentDispatch( \"foobox-readystatechange\" );\r\n        /**\r\n         * Occurs whenever the readyState is changed.\r\n         * @event Plugin#readystatechange\r\n         * @param {EmitterEvent} event - The basic event object.\r\n         * @param {number} readyState - The readyState value.\r\n         */\r\n        this.trigger( \"readystatechange\", [ value ] );\r\n\r\n        const states = [ 'evaluated', 'initializing', 'initialized', 'ready' ];\r\n        this.documentDispatch( `foobox-${ states[ value ] }` );\r\n        this.trigger( states[ value ] );\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //region Methods\r\n\r\n    /**\r\n     *\r\n     * @param configuration\r\n     */\r\n    async init( configuration ) {\r\n        if ( this.readyState !== this.RS_DEFAULT ) return;\r\n        this.#readyState = this.RS_INITIALIZING;\r\n        extend( this.config, configuration );\r\n        this.#parsers = Parser.createAll( this, this.config.__parsers__ );\r\n        this.#readyState = this.RS_INITIALIZED;\r\n        await this.parseDocument( true );\r\n        this.#readyState = this.RS_READY;\r\n        this.observe();\r\n    }\r\n\r\n    /**\r\n     * Dispatch an event on the document.\r\n     * @param {string|Event} event - If given a string a CustomEvent is dispatched using the value as the type.\r\n     * @param {eventOptions} [options] - Any additional options for the event. By default the detail option of CustomEvent objects created by this method is set to the plugin instance.\r\n     * @returns {boolean}\r\n     */\r\n    documentDispatch( event, options ){\r\n        /** @typedef {{bubbles:?boolean,cancelable:?boolean,composed:?boolean,detail:*}} eventOptions */\r\n        if ( isString( event ) ){\r\n            event = new CustomEvent( event, extend( { detail: this }, options ) );\r\n        }\r\n        if ( event instanceof Event ){\r\n            return document.dispatchEvent( event );\r\n        }\r\n        return false;\r\n    }\r\n\r\n    observe(){\r\n        if ( !this.config.watch ) return;\r\n        if ( !this.#observer ){\r\n            this.#observer = new MutationObserver( () => {\r\n                this.parseDocument();\r\n            } );\r\n        }\r\n        this.#observer.observe( document, { childList: true, subtree: true } );\r\n    }\r\n\r\n    unobserve(){\r\n        if ( !this.config.watch || !this.#observer ) return;\r\n        this.#observer.disconnect();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} name\r\n     * @param {object} [configuration]\r\n     * @param {Parser~ctor} [ctor]\r\n     * @returns {boolean}\r\n     */\r\n    registerParser( name, configuration, ctor ){\r\n        if ( this.readyState < this.RS_INITIALIZED && !this.config.hasOwnProperty( name ) ){\r\n            const Parser_ctor = isFunction( ctor ) ? ctor : Parser;\r\n            this.config.__parsers__.push( [ name, Parser_ctor ] );\r\n            this.config[ name ] = extend( {}, configuration );\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} name\r\n     * @returns {boolean}\r\n     */\r\n    unregisterParser( name ){\r\n        if ( this.readyState < this.RS_INITIALIZED && this.config.hasOwnProperty( name ) ){\r\n            this.config.__parsers__ = this.config.__parsers__.filter( ( config ) => {\r\n                const parser = Parser.DEFINITION( config );\r\n                return parser ? parser.name !== name : false;\r\n            });\r\n            delete this.config[ name ];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove any trigger listeners registered using the addTrigger method.\r\n     * @param {?EventTarget} eventTarget\r\n     */\r\n    removeTriggerListener( eventTarget ){\r\n        if ( eventTarget instanceof EventTarget && this.#triggers.has( eventTarget ) ){\r\n            const listener = this.#triggers.get( eventTarget );\r\n            eventTarget.removeEventListener( \"click\", listener, false );\r\n            this.#triggers.delete( eventTarget );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets up a trigger listener on the target.\r\n     * @param {?EventTarget} eventTarget\r\n     * @param {Container} container\r\n     * @param {?Item} [item]\r\n     */\r\n    addTriggerListener( eventTarget, container, item ){\r\n        if ( eventTarget instanceof EventTarget ){\r\n            if ( this.#triggers.has( eventTarget ) ){\r\n                // if there was a listener already cached then remove it before adding the new one\r\n                eventTarget.removeEventListener( \"click\", this.#triggers.get( eventTarget ), false );\r\n            }\r\n            const listener = ( e ) => {\r\n                e.preventDefault();\r\n                this.trigger( \"triggered-container\", [ container, item ] );\r\n            };\r\n            // add the listener to the internal cache, this will update the listener if it existed\r\n            this.#triggers.set( eventTarget, listener );\r\n            eventTarget.addEventListener( \"click\", listener, false );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get all document parsers.\r\n     * @returns {Parser[]}\r\n     */\r\n    getDocumentParsers(){\r\n        return this.#parsers.filter( ( parser ) => parser.isDocumentParser );\r\n    }\r\n\r\n    /**\r\n     * Try get a parser for the reference.\r\n     * @param {*} ref\r\n     * @returns {?Parser}\r\n     */\r\n    getRefParser( ref ){\r\n        return this.#parsers.find( ( parser ) => parser.canParse( ref ) ) ?? null;\r\n    }\r\n\r\n    /**\r\n     * Get all containers for this instance of the plugin.\r\n     * @returns {Container[]}\r\n     */\r\n    getAll(){\r\n        return Array.from( this.#containers.values() );\r\n    }\r\n\r\n    /**\r\n     * Given a reference or selector this method attempts to return the associated container.\r\n     * @param {*} ref\r\n     * @return {Container|null}\r\n     */\r\n    find( ref ){\r\n        if ( this.#containers.has( ref ) ){\r\n            return this.#containers.get( ref );\r\n        }\r\n        if ( isStringNotEmpty( ref ) ){\r\n            const elementRef = document.querySelector( ref );\r\n            if ( elementRef && this.#containers.has( elementRef ) ){\r\n                return this.#containers.get( elementRef );\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get a collection of references from all containers and items.\r\n     * @param {*} excludeRef - A reference to exclude from the result.\r\n     * @returns {Set<*>}\r\n     */\r\n    getRefs( excludeRef ){\r\n        /** @type {Set<*>} */\r\n        const refs = new Set();\r\n        return this.getAll().reduce( ( result, container ) => {\r\n            if ( container.ref !== excludeRef ){\r\n                result.add( container.ref );\r\n                container.items.forEach( ( item ) => {\r\n                    if ( item.ref === excludeRef ) return;\r\n                    result.add( item.ref );\r\n                } );\r\n            }\r\n            return result;\r\n        }, refs);\r\n    }\r\n\r\n    /**\r\n     * Parses the entire document and returns an array of Container objects.\r\n     * @async\r\n     * @param {boolean} [nocache=false] - Whether to disable the parser cache for this call.\r\n     * @returns {Promise<Container[]>} Returns an empty array if no Containers were parsed.\r\n     */\r\n    async parseDocument( nocache ){\r\n        // if the plugin is not initialized yet return an empty array as we have no parsers to work with\r\n        if ( this.readyState < this.RS_INITIALIZED ) return [];\r\n        // if there is already parsing taking place simply return a reference to its promise\r\n        if ( this.#parseDocument ) return this.#parseDocument;\r\n        // otherwise we need to do some work\r\n        nocache = nocache ?? false;\r\n        return this.#parseDocument = new Promise( async ( resolve ) => {\r\n            const results = [], handledRefs = new Set();\r\n            await asyncForEach( this.getDocumentParsers(), async ( parser ) => {\r\n                const containers = await parser.parseDocument( handledRefs, nocache );\r\n                results.push( ...containers );\r\n            });\r\n            this.#parseDocument = null;\r\n            resolve( results );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Parse the supplied reference object into a Container.\r\n     * @param {*} ref - The object to parse.\r\n     * @param {boolean} [nocache=false] - Whether to disable the parser caching for this call.\r\n     * @returns {Container|null} Returns null if the reference object could not be parsed.\r\n     */\r\n    parse( ref, nocache ){\r\n        if ( this.readyState < this.RS_INITIALIZED ) return null;\r\n        nocache = nocache ?? false;\r\n        const parser = this.getRefParser( ref );\r\n        if ( parser ){\r\n            const handledRefs = this.getRefs( ref );\r\n            return parser.parse( ref, handledRefs, nocache );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region listeners\r\n\r\n    /**\r\n     *\r\n     * @param {EmitterEvent} event\r\n     * @param {Container} container\r\n     */\r\n    #onAddedContainer( event, container ){\r\n        this.addTriggerListener( container.triggerTarget, container );\r\n        container.items.forEach( ( item ) => this.addTriggerListener( item.triggerTarget, container, item ) );\r\n        this.#containers.set( container.ref, container );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {EmitterEvent} event\r\n     * @param {Container} container\r\n     * @param {ParserChange} changes\r\n     */\r\n    #onUpdatedContainer( event, container, changes ){\r\n        changes.removed.forEach( ( item ) => this.removeTriggerListener( item.triggerTarget ) );\r\n        changes.added.forEach( ( item ) => this.addTriggerListener( item.triggerTarget, container, item ) );\r\n        this.#containers.set( container.ref, container );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {EmitterEvent} event\r\n     * @param {Container} container\r\n     */\r\n    #onRemovedContainer( event, container ){\r\n        this.removeTriggerListener( container.triggerTarget );\r\n        container.items.forEach( ( item ) => this.removeTriggerListener( item.triggerTarget ) );\r\n        this.#containers.delete( container.ref );\r\n    }\r\n\r\n    //endregion\r\n}\r\n\r\nexport default Plugin;","import {isFunction, isPlainObject, isStringNotEmpty} from \"../../utils/is\";\r\nimport mergeArray from \"../../utils/mergeArray\";\r\n\r\n//region type-definitions\r\n\r\n/**\r\n * @callback PropertyParser~ctor\r\n * @param {TypeParser} parent\r\n * @param {PropertyParser~Configuration} configuration\r\n * @returns {PropertyParser}\r\n */\r\n/**\r\n * @typedef {object} PropertyParserDefinition\r\n * @property {PropertyParser~Configuration} configuration\r\n * @property {PropertyParser~ctor} ctor\r\n */\r\n/**\r\n * If just a string, a new instance of the default property parser is registered using the new name. If an array, the first element is the name, the second is the custom property parser constructor.\r\n * @typedef {PropertyParser~Configuration|[PropertyParser~Configuration,PropertyParser~ctor]} propertyParserDefinition\r\n */\r\n/**\r\n * A method used to test the parsed value to check if it is valid.\r\n * @callback PropertyParser~test\r\n * @param {*} value\r\n * @param {PropertyParser} [propertyParser]\r\n * @returns {boolean}\r\n */\r\n/**\r\n * A method used to convert the parsed value to a specific type.\r\n * @callback PropertyParser~convert\r\n * @param {*} value\r\n * @param {PropertyParser} [propertyParser]\r\n * @returns {*}\r\n */\r\n/**\r\n * The configuration for parsing a property from an object.\r\n * @typedef {object} PropertyParser~Configuration\r\n * @property {string} name - The name of the property as it appears in the resulting properties object.\r\n * @property {boolean} [required=false] - Whether or not this property is required. If set to true and the parsed value is null, undefined or the same as the defaultValue the item will fail to parse.\r\n * @property {boolean} [tracked=false] - Whether or not changes to this property are tracked. By default all required properties are tracked and will ignore this value.\r\n * @property {*} [defaultValue=null] - The default value returned for this property if none is parsed.\r\n * @property {PropertyParser~test} [test] - A method used to test the parsed value to check if it is valid. If not supplied the value is considered valid if: value != null && value !== defaultValue\r\n * @property {PropertyParser~convert} [convert] - A method used to convert the parsed value to a specific type.\r\n * @property {string} [queryParent=\"^\"]\r\n * @property {string} [queryPath=\"/\"]\r\n * @property {string} [queryType=\":\"]\r\n * @property {string[]} [obj=[]] - An array of queries used to parse a plain object reference for the property value. The properties are iterated in index order and the first match is returned.\r\n * @property {string[]} [elem=[]] - An array of queries used to parse an HTMLElement reference for the property value. The queries are iterated in index order and the first match is returned.\r\n */\r\n\r\n\r\n//endregion\r\n\r\nexport default class PropertyParser {\r\n\r\n    //#region static\r\n\r\n    /**\r\n     * The default convert method used by all properties. This does nothing but pass through the supplied value.\r\n     * @param {*} value - The parsed value.\r\n     * @param {PropertyParser} property - The property object itself.\r\n     * @returns {*}\r\n     */\r\n    static DEFAULT_CONVERT( value, property ){\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * The default test method used by all properties to determine if the parsed value is valid.\r\n     * @param {*} value - The parsed value.\r\n     * @param {PropertyParser} property - The property object itself.\r\n     * @returns {boolean}\r\n     */\r\n    static DEFAULT_TEST( value, property ){\r\n        return value != null && value !== property.defaultValue;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {propertyParserDefinition} configuration\r\n     * @returns {?PropertyParserDefinition}\r\n     */\r\n    static DEFINITION( configuration ){\r\n        if ( isPlainObject( configuration ) ){\r\n            return { configuration: /** @type PropertyParser~Configuration */ configuration, ctor: /** @type PropertyParser~ctor */ PropertyParser };\r\n        }\r\n        if ( Array.isArray( configuration ) && configuration.length === 2 && isPlainObject( configuration[0] ) && isFunction( configuration[1] ) ){\r\n            return { configuration: configuration[0], ctor: configuration[1] };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Merges all property definitions from the source into the target, properties are compared by name.\r\n     * @param {propertyParserDefinition[]} target - The target array to push definitions into.\r\n     * @param {propertyParserDefinition[]} source - The source array to pull definitions from.\r\n     * @returns {propertyParserDefinition[]}\r\n     */\r\n    static MERGE_DEFINITIONS( target, source ){\r\n        return mergeArray( target, source, ( targetDefinition, sourceDefinition ) => {\r\n            const targetDef = PropertyParser.DEFINITION( targetDefinition ),\r\n                sourceDef = PropertyParser.DEFINITION( sourceDefinition );\r\n            if ( !targetDef || !sourceDef ) return false;\r\n            return targetDef.configuration.name === sourceDef.configuration.name;\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {TypeParser} typeParser\r\n     * @param {propertyParserDefinition} definition\r\n     * @returns {?PropertyParser}\r\n     */\r\n    static create( typeParser, definition ){\r\n        const def = PropertyParser.DEFINITION( definition );\r\n        return def ? new def.ctor( typeParser, def.configuration ) : null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {TypeParser} typeParser\r\n     * @param {propertyParserDefinition[]} propertyParserDefinitions\r\n     * @returns {PropertyParser[]}\r\n     */\r\n    static createAll( typeParser, propertyParserDefinitions ){\r\n        return propertyParserDefinitions.reduce( ( result, definition ) => {\r\n            const propertyParser = PropertyParser.create( typeParser, definition );\r\n            if ( propertyParser ) result.push( propertyParser );\r\n            return result;\r\n        },/** @type {PropertyParser[]} */ [] );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} ref\r\n     * @param {PropertyParser[]} properties\r\n     * @param {boolean} [nocache=false]\r\n     * @returns {?object}\r\n     */\r\n    static getValues( ref, properties, nocache ){\r\n        const result = {};\r\n        for ( const property of properties ){\r\n            const value = property.getValue( ref, nocache );\r\n            if ( property.required && !property.test( value ) ){\r\n                // if there is a required property that is not supplied then stop parsing and exit early\r\n                return null;\r\n            } else {\r\n                result[ property.name ] = value;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //region constructor\r\n\r\n    /**\r\n     * Create a new instance of a PropertyParser.\r\n     * @param {TypeParser} typeParser - The parent type parser for this instance.\r\n     * @param {PropertyParser~Configuration} configuration - The configuration for this instance.\r\n     */\r\n    constructor( typeParser, configuration ) {\r\n        this.#typeParser = typeParser;\r\n        this.#name = configuration.name;\r\n        this.required = configuration.required ?? false;\r\n        this.defaultValue = configuration.defaultValue ?? null;\r\n        this.#convert = configuration.convert ?? PropertyParser.DEFAULT_CONVERT;\r\n        this.#test = configuration.test ?? PropertyParser.DEFAULT_TEST;\r\n        this.queryParent = configuration.queryParent ?? \"^\";\r\n        this.queryPath = configuration.queryPath ?? \"/\";\r\n        this.queryType = configuration.queryType ?? \":\";\r\n        if ( Array.isArray( configuration.obj ) ){\r\n            this.obj = configuration.obj.map( ( query ) => this.objectQuery( query ) ).filter( ( query ) => query != null);\r\n        }\r\n        if ( Array.isArray( configuration.elem ) ){\r\n            this.elem = configuration.elem.map( ( query ) => this.elementQuery( query ) ).filter( ( query ) => query != null);\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region properties\r\n\r\n    /**\r\n     * The private field used by the 'typeParser' read-only property.\r\n     * @type {TypeParser}\r\n     * @private\r\n     */\r\n    #typeParser;\r\n    /**\r\n     * Get the parent type parser.\r\n     * @type {TypeParser}\r\n     * @readonly\r\n     */\r\n    get typeParser(){\r\n        return this.#typeParser;\r\n    }\r\n\r\n    get parser(){\r\n        return this.typeParser.parser;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the 'name' read-only property.\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    #name;\r\n    /**\r\n     * Get the name the property was registered with.\r\n     * @type {string}\r\n     */\r\n    get name(){\r\n        return this.#name;\r\n    }\r\n\r\n    /**\r\n     * Whether this property is required.\r\n     * @type {boolean}\r\n     * @default false\r\n     */\r\n    required;\r\n    /**\r\n     * The default value returned if none is parsed.\r\n     * @type {*}\r\n     * @default null\r\n     */\r\n    defaultValue;\r\n    /**\r\n     * The delimiter used by element queries to target a parent element.\r\n     * @type {string}\r\n     * @default \"^\"\r\n     */\r\n    queryParent;\r\n    /**\r\n     * The delimiter used by queries to target either a child element or object property.\r\n     * @type {string}\r\n     * @default \"/\"\r\n     */\r\n    queryPath;\r\n    /**\r\n     * The delimiter used by element queries to specify where the value should be pulled from.\r\n     * @type {string}\r\n     * @default \":\"\r\n     */\r\n    queryType;\r\n    /**\r\n     * An array of compiled queries used to interrogate plain objects.\r\n     * @type {ObjectQuery[]}\r\n     */\r\n    obj = [];\r\n    /**\r\n     * An array of compiled queries used to interrogate elements.\r\n     * @type {ElementQuery[]}\r\n     */\r\n    elem = [];\r\n    /**\r\n     * The method used to convert the parsed value to another type.\r\n     * @type {PropertyParser~convert}\r\n     * @default Property.DEFAULT_CONVERT\r\n     */\r\n    #convert;\r\n    /**\r\n     * The method used to test if the parsed value is valid.\r\n     * @type {PropertyParser~test}\r\n     * @default Property.DEFAULT_CONVERT\r\n     */\r\n    #test;\r\n    /**\r\n     *\r\n     * @type {Map<string, *>}\r\n     */\r\n    #cache = new Map();\r\n\r\n    //#endregion\r\n\r\n    /**\r\n     * @typedef {object} PropertyQuery\r\n     * @property {string} raw\r\n     * @property {string} name\r\n     * @property {function(*):*} getValue\r\n     */\r\n\r\n    /**\r\n     *\r\n     * @param {string} query\r\n     * @returns {?ObjectQuery}\r\n     */\r\n    objectQuery( query ){\r\n        /**\r\n         * @typedef {PropertyQuery} ObjectQuery\r\n         * @property {string[]} path\r\n         */\r\n        if ( isStringNotEmpty( query ) ){\r\n            let name = query, path = [];\r\n            if ( name.indexOf( this.queryPath ) !== -1 ){\r\n                const parts = name.split( this.queryPath );\r\n                name = parts.pop();\r\n                path.push( parts );\r\n            }\r\n            const target = ( ref ) => {\r\n                let result = ref;\r\n                for ( const part of path ){\r\n                    result = result[ part ];\r\n                    if ( !result ) break;\r\n                }\r\n                return result ?? null;\r\n            };\r\n            return {\r\n                raw: query,\r\n                name,\r\n                path,\r\n                getValue: ( ref ) => {\r\n                    const targetRef = target( ref );\r\n                    if ( targetRef ){\r\n                        return this.convert( targetRef[ name ] ) ?? this.defaultValue;\r\n                    }\r\n                    return this.defaultValue;\r\n                }\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} query\r\n     * @returns {?ElementQuery}\r\n     */\r\n    elementQuery( query ){\r\n        /**\r\n         * @typedef {PropertyQuery} ElementQuery\r\n         * @property {number} parents\r\n         * @property {?string} selector\r\n         */\r\n        if ( isStringNotEmpty( query ) ){\r\n            let name = query, parents = 0, selector = null, type = \"prop\";\r\n            while ( name[0] === this.queryParent ){\r\n                parents++;\r\n                name = name.slice(1);\r\n            }\r\n            if ( name.indexOf( this.queryPath ) !== -1 ){\r\n                const parts = name.split( this.queryPath );\r\n                selector = parts[0];\r\n                name = parts[1];\r\n            }\r\n            if ( name.indexOf( this.queryType ) !== -1 ){\r\n                const parts = name.split( this.queryType );\r\n                type = parts[0];\r\n                name = parts[1];\r\n            }\r\n            const target = ( ref ) => {\r\n                let result = ref;\r\n                for ( let i = 0; i < parents; i++ ){\r\n                    result = result.parentElement;\r\n                    if ( !result ) break;\r\n                }\r\n                return result && selector ? result.querySelector( selector ) : result;\r\n            };\r\n            let getValue;\r\n            switch ( type ){\r\n                case \"prop\":\r\n                    getValue = ( ref ) => { return this.convert( ref[ name ] ) ?? this.defaultValue; };\r\n                    break;\r\n                case \"data\":\r\n                    getValue = ( ref ) => { return this.convert( ref.dataset[ name ] ) ?? this.defaultValue; };\r\n                    break;\r\n                case \"attr\":\r\n                    getValue = ( ref ) => { return ref.hasAttribute( name ) ? this.convert( ref.getAttribute( name ) ) : this.defaultValue; };\r\n                    break;\r\n                default:\r\n                    getValue = () => this.defaultValue;\r\n                    break;\r\n            }\r\n            return {\r\n                raw: query,\r\n                name,\r\n                type,\r\n                parents,\r\n                selector,\r\n                getValue: ( ref ) => {\r\n                    const targetRef = target( ref );\r\n                    if ( targetRef ){\r\n                        return getValue( targetRef );\r\n                    }\r\n                    return this.defaultValue;\r\n                }\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param ref\r\n     * @param nocache\r\n     * @returns {*}\r\n     */\r\n    getValue( ref, nocache ){\r\n        if ( !nocache && this.#cache.has( ref ) ){\r\n            return this.#cache.get( ref );\r\n        }\r\n        let result = this.defaultValue, query;\r\n        if ( ref instanceof HTMLElement ){\r\n            for ( query of this.elem ){\r\n                const value = query.getValue( ref );\r\n                if ( this.test( value ) ){\r\n                    result = value;\r\n                    break;\r\n                }\r\n            }\r\n        } else if ( isPlainObject( ref ) ){\r\n            for ( query of this.obj ){\r\n                const value = query.getValue( ref );\r\n                if ( this.test( value ) ){\r\n                    result = value;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const prop = { name: this.name, type: this.typeParser.name, value: result, query, ref };\r\n        this.parser.trigger( 'get-property', [ prop ] );\r\n        this.#cache.set( ref, prop.value );\r\n        return prop.value;\r\n    }\r\n\r\n    convert(value){\r\n        return this.#convert( value, this );\r\n    }\r\n\r\n    test(value){\r\n        return this.#test( value, this );\r\n    }\r\n}","import {isFunction, isPlainObject, isStringNotEmpty} from \"../../utils/is\";\r\nimport {defaults} from \"../../utils/object\";\r\nimport makeSelector from \"../../utils/makeSelector\";\r\nimport PropertyParser from \"./PropertyParser\";\r\nimport Item from \"./Item\";\r\n\r\n//region type-definitions\r\n\r\n/**\r\n * @callback TypeParser~ctor\r\n * @param {Parser} parser\r\n * @param {string} name\r\n * @returns TypeParser\r\n */\r\n/**\r\n * @typedef {object} TypeParserDefinition\r\n * @property {string} name\r\n * @property {TypeParser~ctor} ctor\r\n */\r\n/**\r\n * If just a string, a new instance of the default type parser is registered using the new name. If an array, the first element is the name, the second is the custom type parser constructor.\r\n * @typedef {string|[string,TypeParser~ctor]} typeParserDefinition\r\n */\r\n/**\r\n * The configuration for parsing an item from an object.\r\n * @typedef {object} TypeParser~Configuration\r\n * @property {number} [priority=0]\r\n * @property {string[]} [include]\r\n * @property {string[]} [exclude]\r\n * @property {propertyParserDefinition[]} [properties]\r\n */\r\n\r\n//endregion\r\n\r\n/**\r\n * Parses item data from various sources depending on configuration.\r\n */\r\nexport default class TypeParser {\r\n\r\n    //region static\r\n\r\n    /**\r\n     *\r\n     * @param {typeParserDefinition} configuration\r\n     * @returns {?TypeParserDefinition}\r\n     */\r\n    static DEFINITION(configuration){\r\n        if (isStringNotEmpty(configuration)){\r\n            return { name: /** @type string */ configuration, ctor: /** @type TypeParser~ctor */ TypeParser };\r\n        }\r\n        if (Array.isArray(configuration) && configuration.length === 2 && isStringNotEmpty(configuration[0]) && isFunction(configuration[1])){\r\n            return { name: configuration[0], ctor: configuration[1] };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Parser} parser\r\n     * @param {typeParserDefinition} definition\r\n     * @returns {?TypeParser}\r\n     */\r\n    static create(parser, definition){\r\n        const def = TypeParser.DEFINITION(definition);\r\n        return def ? new def.ctor(parser, def.name) : null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Parser} parser\r\n     * @param {typeParserDefinition[]} typeParserDefinitions\r\n     * @returns {TypeParser[]}\r\n     */\r\n    static createAll(parser, typeParserDefinitions){\r\n        return typeParserDefinitions.reduce((result, config) => {\r\n            const typeParser = TypeParser.create(parser, config);\r\n            if (typeParser) result.push(typeParser);\r\n            return result;\r\n        },/** @type {TypeParser[]} */ []).sort((a, b) => a.priority - b.priority);\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region constructor\r\n\r\n    /**\r\n     * Parses item data from various sources depending on configuration.\r\n     * @param {Parser} parser - The parent parser for this instance.\r\n     * @param {string} name - The type of item parsed by this instance.\r\n     */\r\n    constructor(parser, name) {\r\n        this.#parser = parser;\r\n        this.#name = name;\r\n        defaults(this.config, this.defaults);\r\n        this.#includeSelector = makeSelector(this.config.include);\r\n        this.#excludeSelector = makeSelector(this.config.exclude);\r\n        this.#properties = PropertyParser.createAll(this, PropertyParser.MERGE_DEFINITIONS(this.config.properties, this.parser.config.defaultProperties));\r\n        this.#requiredProperties = this.properties.filter((property) => property.required);\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region properties\r\n\r\n    /**\r\n     * The private field used by the 'parent' read-only property.\r\n     * @type {Parser}\r\n     * @private\r\n     */\r\n    #parser;\r\n    /**\r\n     * Get the parent parser.\r\n     * @type {Parser}\r\n     * @readonly\r\n     */\r\n    get parser(){\r\n        return this.#parser;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the 'name' read-only property.\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    #name;\r\n    /**\r\n     * Get the name the type parser was registered with.\r\n     * @type {string}\r\n     */\r\n    get name(){\r\n        return this.#name;\r\n    }\r\n\r\n    /**\r\n     * Get the default type parser configuration.\r\n     * @type {TypeParser~Configuration}\r\n     * @readonly\r\n     */\r\n    get defaults(){\r\n        return {\r\n            priority: 0,\r\n            include: [],\r\n            exclude: [],\r\n            properties: [],\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get the parser configuration.\r\n     * @type {TypeParser~Configuration}\r\n     * @readonly\r\n     */\r\n    get config(){\r\n        if (isPlainObject(this.parser.config[this.name])){\r\n            return this.parser.config[this.name];\r\n        }\r\n        return this.parser.config[this.name] = {};\r\n    }\r\n\r\n    /**\r\n     * The private field used by the 'priority' read-only property.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    #priority;\r\n    /**\r\n     * Get the priority.\r\n     * @type {number}\r\n     * @readonly\r\n     */\r\n    get priority(){\r\n        return this.#priority;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the 'includeSelector' read-only property.\r\n     * @type {?string}\r\n     * @private\r\n     */\r\n    #includeSelector;\r\n    /**\r\n     * Get the result of combining all configured include selectors into one.\r\n     * @type {?string}\r\n     * @readonly\r\n     */\r\n    get includeSelector(){\r\n        return this.#includeSelector;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the 'excludeSelector' read-only property.\r\n     * @type {?string}\r\n     * @private\r\n     */\r\n    #excludeSelector;\r\n    /**\r\n     * Get the result of combining all configured exclude selectors into one.\r\n     * @type {?string}\r\n     * @readonly\r\n     */\r\n    get excludeSelector(){\r\n        return this.#excludeSelector;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the 'properties' read-only property.\r\n     * @type {PropertyParser[]}\r\n     * @private\r\n     */\r\n    #properties;\r\n    /**\r\n     * Get all configured property parsers.\r\n     * @type {PropertyParser[]}\r\n     * @readonly\r\n     */\r\n    get properties(){\r\n        return this.#properties;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the 'requiredProperties' read-only property.\r\n     * @type {PropertyParser[]}\r\n     * @private\r\n     */\r\n    #requiredProperties;\r\n    /**\r\n     * Get all configured required property parsers.\r\n     * @type {PropertyParser[]}\r\n     * @readonly\r\n     */\r\n    get requiredProperties(){\r\n        return this.#requiredProperties;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @type {Map<*, Item>}\r\n     */\r\n    #cache = new Map();\r\n\r\n    /**\r\n     *\r\n     * @type {Map<*, object>}\r\n     */\r\n    #requiredPropertyCache = new Map();\r\n\r\n    /**\r\n     *\r\n     * @type {Map<*, object>}\r\n     */\r\n    #propertyCache = new Map();\r\n\r\n    //endregion\r\n\r\n    /**\r\n     * Checks if the supplied reference is included by this instance.\r\n     * NOTE: This DOES NOT check for exclusions! Use the canParse method if you want to check if a reference is both included AND NOT excluded.\r\n     * @param {*} ref - The object to test.\r\n     * @returns {boolean}\r\n     */\r\n    includes(ref){\r\n        if (ref instanceof HTMLElement){\r\n            return this.includeSelector !== null && ref.matches(this.includeSelector);\r\n        }\r\n        if (isPlainObject(ref)){\r\n            return ref.type === this.name;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the supplied reference is excluded by this instance.\r\n     * @param {*} ref - The object to test.\r\n     * @returns {boolean}\r\n     */\r\n    excludes(ref){\r\n        if (ref instanceof HTMLElement){\r\n            return this.excludeSelector !== null && ref.matches(this.excludeSelector);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the supplied reference can be parsed by this instance.\r\n     * @param {*} ref - The object to test.\r\n     * @returns {boolean}\r\n     */\r\n    canParse(ref) {\r\n        return this.includes(ref) && !this.excludes(ref);\r\n    }\r\n\r\n    create(parent, ref, trigger){\r\n        if (ref instanceof HTMLElement || isPlainObject(ref)){\r\n            return new Item(parent, this, ref, trigger);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parses the supplied reference object and returns a new ParserItem.\r\n     * @param {Container} parent - The parent container.\r\n     * @param {*} ref - The object to parse.\r\n     * @param {boolean} [nocache=false] - Whether to ignore any cached values when parsing the item.\r\n     * @returns {Item|null} Returns null if parsing fails.\r\n     */\r\n    parse( parent, ref, nocache ){\r\n        let item;\r\n        if (this.#cache.has(ref)){\r\n            item = this.#cache.get(ref);\r\n        } else {\r\n            item = this.create(parent, ref, this.getTrigger(ref));\r\n        }\r\n        if (item instanceof Item){\r\n            const properties = this.getRequiredProperties(ref, nocache);\r\n            if (!properties){\r\n                this.#cache.delete(ref);\r\n                return null;\r\n            }\r\n            item.requiredProperties = properties;\r\n            this.#cache.set(ref, item);\r\n        }\r\n        return item;\r\n    }\r\n\r\n    /**\r\n     * Gets the trigger element for the reference object. Trigger elements are used to open the modal.\r\n     * @param {*} ref - The reference object to get the trigger from.\r\n     * @returns {?HTMLElement} Returns null if the item has no trigger element.\r\n     */\r\n    getTrigger(ref){\r\n        return ref instanceof HTMLElement ? ref : null;\r\n    }\r\n\r\n    getRequiredProperties(ref, nocache){\r\n        if (!nocache && this.#requiredPropertyCache.has(ref)){\r\n            return this.#requiredPropertyCache.get(ref);\r\n        }\r\n        const properties = PropertyParser.getValues(ref, this.requiredProperties, nocache);\r\n        this.#requiredPropertyCache.set(ref, properties);\r\n        return properties;\r\n    }\r\n\r\n    getProperties(ref, nocache){\r\n        if (!nocache && this.#propertyCache.has(ref)){\r\n            return this.#propertyCache.get(ref);\r\n        }\r\n        const properties = PropertyParser.getValues(ref, this.properties, nocache);\r\n        this.#propertyCache.set(ref, properties);\r\n        return properties;\r\n    }\r\n}","import utils from \"../../utils\";\r\nimport Plugin from \"./Plugin\";\r\nimport Parser, { PARSER_DEFAULTS, PARSER_DEFAULTS_PRO } from \"./Parser\";\r\nimport GroupParser, { GROUP_PARSER_DEFAULTS, GROUP_PARSER_DEFAULTS_PRO } from \"./GroupParser\";\r\nimport ModalElement from \"./modal\";\r\n\r\nconst plugin = new Plugin( {\r\n    __parsers__: [\r\n        [\"default\", Parser],\r\n        [\"groups\", GroupParser]\r\n    ],\r\n    default: PARSER_DEFAULTS_PRO,\r\n    groups: GROUP_PARSER_DEFAULTS_PRO,\r\n    watch: false\r\n} );\r\n\r\nplugin.utils = utils;\r\nplugin.Plugin = Plugin;\r\nplugin.Parser = Parser;\r\nplugin.GroupParser = GroupParser;\r\nplugin.PARSER_DEFAULTS = PARSER_DEFAULTS;\r\nplugin.GROUP_PARSER_DEFAULTS = GROUP_PARSER_DEFAULTS;\r\nplugin.ModalElement = ModalElement;\r\n\r\nexport default plugin;","import \"./index.scss\";\r\n\r\nexport * from \"./inner\";\r\n\r\nclass ModalElement extends HTMLDialogElement {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get root(){\r\n        return this.ownerDocument.documentElement;\r\n    }\r\n\r\n    get inner(){\r\n        return this.querySelector( 'foobox-inner' );\r\n    }\r\n\r\n    show(){\r\n        this.root.setAttribute( 'foobox-open', '' );\r\n        this.showModal();\r\n    }\r\n\r\n    hide(){\r\n        this.root.removeAttribute( 'foobox-open' );\r\n        this.close();\r\n    }\r\n\r\n    onClick( event ) {\r\n        if ( event.target === event.currentTarget ){\r\n            event.preventDefault();\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    onCloseClick( event ) {\r\n        event.preventDefault();\r\n        this.close();\r\n    }\r\n}\r\n\r\ncustomElements.define( 'foobox-modal', ModalElement, { extends: \"dialog\" } );\r\n\r\nexport default ModalElement;","import \"./index.scss\";\r\nimport getResizeObserverEntrySize from \"../../../../utils/getResizeObserverEntrySize\";\r\nimport debounce from \"../../../../utils/debounce\";\r\n\r\nexport * from \"../items\";\r\nexport * from \"../overlay\";\r\n\r\nclass InnerElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.#observer = new ResizeObserver( debounce( this.onResize.bind( this ), 50 ) );\r\n    }\r\n\r\n    #observer;\r\n\r\n    onResize( entries ){\r\n        if ( !this.items ) return;\r\n        const entry = entries.length ? entries[0] : null;\r\n        if ( !entry ) return;\r\n        const size = getResizeObserverEntrySize( entry );\r\n        this.items.doResize( size );\r\n        console.log( 'onResize', size );\r\n    }\r\n\r\n    connectedCallback(){\r\n        if ( this.isConnected ){\r\n            this.#observer.unobserve( this );\r\n            this.#observer.observe( this );\r\n        }\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        this.#observer.unobserve( this );\r\n    }\r\n\r\n    get items(){\r\n        return this.querySelector( 'foobox-items' );\r\n    }\r\n\r\n    get overlay(){\r\n        return this.querySelector( 'foobox-overlay' );\r\n    }\r\n\r\n    get cover(){\r\n        return this.hasAttribute( 'cover' );\r\n    }\r\n\r\n    set cover( value ){\r\n        this.toggleAttribute( 'cover', Boolean( value ) );\r\n    }\r\n}\r\n\r\ncustomElements.define( 'foobox-inner', InnerElement );\r\n\r\nexport default InnerElement;","import \"./index.scss\";\r\nimport { isFunction } from \"../../../../utils/is\";\r\n\r\nexport * from \"./item\";\r\n\r\nclass ItemsElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    doResize( size ){\r\n        let child;\r\n        for ( child of this.children ){\r\n            if ( !isFunction( child[ 'doResize' ] ) ) continue;\r\n            child.doResize( size );\r\n        }\r\n    }\r\n}\r\n\r\ncustomElements.define( 'foobox-items', ItemsElement );\r\n\r\nexport default ItemsElement;","import \"./index.scss\";\r\nimport { isBoolean, isStringNotEmpty } from \"../../../../../../utils/is\";\r\n\r\nclass CaptionElement extends HTMLElement {\r\n\r\n    static get observedAttributes() {\r\n        return [ 'title', 'description' ];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.attachShadow( { mode: \"open\" } ).append( this.header, this.section, this.ownerDocument.createElement( 'slot' ), this.toolbar );\r\n    }\r\n\r\n    #header;\r\n\r\n    get header() {\r\n        if ( !this.#header ) {\r\n            this.#header = this.ownerDocument.createElement( 'header' );\r\n            this.#header.setAttribute( 'part', 'title' );\r\n        }\r\n        return this.#header;\r\n    }\r\n\r\n    #section;\r\n\r\n    get section() {\r\n        if ( !this.#section ) {\r\n            this.#section = this.ownerDocument.createElement( 'section' );\r\n            this.#section.setAttribute( 'part', 'description' );\r\n        }\r\n        return this.#section;\r\n    }\r\n\r\n    #toolbar;\r\n\r\n    get toolbar() {\r\n        if ( !this.#toolbar ) {\r\n            this.#toolbar = this.ownerDocument.createElement( 'div' );\r\n            this.#toolbar.setAttribute( 'part', 'toolbar' );\r\n            const close = this.ownerDocument.createElement( 'button' );\r\n            close.innerHTML = '&times;';\r\n            close.addEventListener( 'click', ( e ) => {\r\n                e.preventDefault();\r\n                this.toggle();\r\n            } );\r\n            const slot = this.ownerDocument.createElement( 'slot' );\r\n            slot.name = 'toolbar';\r\n            this.#toolbar.append( close, slot );\r\n        }\r\n        return this.#toolbar;\r\n    }\r\n\r\n    get open() {\r\n        return this.hasAttribute( 'open' );\r\n    }\r\n\r\n    set open( value ) {\r\n        this.toggleAttribute( 'open', Boolean( value ) );\r\n    }\r\n\r\n    get description() {\r\n        return this.getAttribute( 'description' );\r\n    }\r\n\r\n    set description( value ) {\r\n        if ( isStringNotEmpty( value ) ) {\r\n            this.setAttribute( 'description', value );\r\n        } else {\r\n            this.removeAttribute( 'description' );\r\n        }\r\n    }\r\n\r\n    get position() {\r\n        return this.getAttribute( 'position' );\r\n    }\r\n\r\n    set position( value ) {\r\n        if ( [ 'top', 'bottom' ].includes( value ) ) {\r\n            this.setAttribute( 'position', value );\r\n        } else {\r\n            this.removeAttribute( 'position' );\r\n        }\r\n    }\r\n\r\n    attributeChangedCallback( name, oldValue, newValue ) {\r\n        if ( name === \"title\" )\r\n            this.header.innerHTML = newValue;\r\n\r\n        if ( name === \"description\" )\r\n            this.section.innerHTML = newValue;\r\n\r\n        console.log( \"attr changed: \", name, oldValue, newValue );\r\n    }\r\n\r\n    toggle( force ) {\r\n        return this.open = isBoolean( force ) ? force : !this.open;\r\n    }\r\n}\r\n\r\ncustomElements.define( 'foobox-caption', CaptionElement );\r\n\r\nexport default CaptionElement;","import \"./index.scss\";\r\nimport { isStringNotEmpty } from \"../../../../../../utils/is\";\r\n\r\nclass ImageElement extends HTMLElement {\r\n\r\n    static get observedAttributes() { return ['src', 'srcset', 'zoom']; }\r\n\r\n    constructor() {\r\n        super();\r\n        this.attachShadow( { mode: \"open\" } ).append( this.img );\r\n    }\r\n\r\n    #img;\r\n\r\n    get img() {\r\n        if ( !this.#img ) {\r\n            this.#img = this.ownerDocument.createElement( 'img' );\r\n            this.#img.setAttribute( 'part', 'img' );\r\n            this.#img.setAttribute( 'draggable', 'false' );\r\n        }\r\n        return this.#img;\r\n    }\r\n\r\n    get src(){\r\n        return this.getAttribute( 'src' );\r\n    }\r\n\r\n    set src( value ){\r\n        if ( isStringNotEmpty( value ) ){\r\n            this.setAttribute( 'src', value );\r\n        } else {\r\n            this.removeAttribute( 'src' );\r\n        }\r\n    }\r\n\r\n    get srcset(){\r\n        return this.getAttribute( 'srcset' );\r\n    }\r\n\r\n    set srcset( value ){\r\n        if ( isStringNotEmpty( value ) ){\r\n            this.setAttribute( 'srcset', value );\r\n        } else {\r\n            this.removeAttribute( 'srcset' );\r\n        }\r\n    }\r\n\r\n    get zoom(){\r\n        return this.getAttribute( 'zoom' );\r\n    }\r\n\r\n    set zoom( value ){\r\n        if ( isStringNotEmpty( value ) ){\r\n            this.setAttribute( 'zoom', value );\r\n        } else {\r\n            this.removeAttribute( 'zoom' );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if ( name === \"src\" )\r\n            this.img.src = newValue;\r\n\r\n        if ( name === \"srcset\" )\r\n            this.img.srcset = newValue;\r\n\r\n        if ( name === \"zoom\" ){\r\n            this.style.setProperty( 'transform', `scale(${newValue}) translateX(0px) translateY(0px)` );\r\n        }\r\n\r\n        console.log( \"attr changed: \", name, oldValue, newValue );\r\n    }\r\n\r\n    doZoom( scale ){\r\n        if ( this.img.complete ) {\r\n            const maxZoom = this.img.naturalWidth ? Math.max(round(this.clientWidth / this.img.naturalWidth, 5), 1) : 1;\r\n            console.log( 'maxZoom', maxZoom );\r\n            let zoom = isStringNotEmpty( newValue ) ? Number.parseInt( newValue ) : 1;\r\n            zoom = Number.isNaN( zoom ) ? 1 : zoom;\r\n            let maxSize = { width: this.clientWidth, height: this.clientHeight };\r\n        }\r\n    }\r\n\r\n    doResize( size ) {\r\n        if ( this.img.complete ) {\r\n            // const restrict = this.restrict( size );\r\n            // switch ( restrict ) {\r\n            //     case \"width\":\r\n            //         this.img.style.removeProperty( \"height\" );\r\n            //         this.img.style.setProperty( \"width\", \"100%\" );\r\n            //         break;\r\n            //     case \"height\":\r\n            //         this.img.style.removeProperty( \"width\" );\r\n            //         this.img.style.setProperty( \"height\", \"100%\" );\r\n            //         break;\r\n            //     default:\r\n            //         this.img.style.removeProperty( \"width\" );\r\n            //         this.img.style.removeProperty( \"height\" );\r\n            //         break;\r\n            // }\r\n        }\r\n    }\r\n\r\n    restrict( size ) {\r\n        if ( !this.img.complete ) return null;\r\n\r\n        const { naturalWidth: width, naturalHeight: height } = this.img;\r\n\r\n        const ratioX = size.width / width;\r\n        const ratioY = size.height / height;\r\n\r\n        console.log( 'restrict', size, width, height, ratioX, ratioY );\r\n\r\n        if ( ratioY < ratioX ) return \"height\";\r\n        if ( ratioX < ratioY ) return \"width\";\r\n        return null;\r\n    }\r\n}\r\n\r\ncustomElements.define( 'foobox-image', ImageElement );\r\n\r\nexport default ImageElement;","import \"./index.scss\";\r\nimport { isFunction, isStringNotEmpty } from \"../../../../../utils/is\";\r\n\r\nexport * from \"./caption\";\r\nexport * from \"./image\";\r\n\r\nclass ItemElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get type(){\r\n        return this.getAttribute( 'type' );\r\n    }\r\n\r\n    set type( value ){\r\n        if ( isStringNotEmpty( value ) ){\r\n            this.setAttribute( 'type', value );\r\n        } else {\r\n            this.removeAttribute( 'type' );\r\n        }\r\n    }\r\n\r\n    doResize( size ){\r\n        let child;\r\n        for ( child of this.children ){\r\n            if ( !isFunction( child[ 'doResize' ] ) ) continue;\r\n            child.doResize( size );\r\n        }\r\n    }\r\n}\r\n\r\ncustomElements.define( 'foobox-item', ItemElement );\r\n\r\nexport default ItemElement;","import \"./index.scss\";\r\nclass OverlayElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n}\r\n\r\ncustomElements.define( 'foobox-overlay', OverlayElement );\r\n\r\nexport default OverlayElement;","import {isFunction, isPlainObject, isStringNotEmpty, isUndefined} from \"./is\";\r\nimport EmitterEvent from \"./EmitterEvent\";\r\nimport {defaults, objForEach} from \"./object\";\r\n\r\n//region type-definitions\r\n\r\n/**\r\n * A function that can handle an event emitted by an Emitter object.\r\n * @callback EmitterListener\r\n * @param {EmitterEvent} [event]\r\n * @param {...*} [args]\r\n */\r\n/**\r\n * An object containing event type to listener mappings.\r\n * @typedef {object} EmitterMap\r\n * @example\r\n *  {\r\n *      \"some-event\": (event, ...args) => { },\r\n *      \"another-event\": (event, ...args) => { }\r\n *  }\r\n */\r\n/**\r\n * The result of the Emitter.parseType method.\r\n * @typedef {object} EmitterType\r\n * @property {?string} [type] - The type of the event.\r\n * @property {?string} [namespace] - The namespace for the event.\r\n */\r\n/**\r\n * A map of event type to namespaces.\r\n * @typedef {Map<string, EmitterNamespaces>} EmitterEvents\r\n */\r\n/**\r\n * A map of namespace to listeners.\r\n * @typedef {Map<?string, EmitterListeners>} EmitterNamespaces\r\n */\r\n/**\r\n * A map of listener to thisArgs\r\n * @typedef {Map<EmitterListener, Set<*>>} EmitterListeners\r\n */\r\n\r\n//endregion\r\n\r\n/**\r\n * Create a new Emitter instance.\r\n * @class Emitter\r\n * @param {EmitterEventOptions} [options] - The default options for events created by this instance.\r\n * @param {Emitter} [parentEmitter] - The parent emitter for this instance.\r\n */\r\nclass Emitter {\r\n\r\n    //region static\r\n\r\n    /**\r\n     * The separator used to parse eventType strings into there component type and namespace values.\r\n     * @type {string}\r\n     * @default \".\"\r\n     */\r\n    static EVENT_TYPE_NAMESPACE_SEPARATOR = \".\";\r\n\r\n    /**\r\n     * Parses the supplied event type string into its component type and namespace values.\r\n     * @param {string} type - The event type string to parse.\r\n     * @param {boolean} [required=false] - Whether to throw a TypeError if the parsed type is empty.\r\n     * @returns {EmitterType}\r\n     * @throws {TypeError} Throws a TypeError if the supplied `type` or return value is invalid.\r\n     */\r\n    static parseType(type, required){\r\n        if (!isStringNotEmpty(type)) {\r\n            throw new TypeError(\"The 'type' argument must be a non-empty string.\");\r\n        }\r\n        let namespace = null, parsedType = type;\r\n        const n_index = type.indexOf(this.EVENT_TYPE_NAMESPACE_SEPARATOR);\r\n        if (n_index !== -1){\r\n            namespace = type.slice(n_index + 1) || null;\r\n            parsedType = type.slice(0, n_index) || null;\r\n        }\r\n        if ((!namespace && !parsedType) || (!parsedType && required)){\r\n            throw new TypeError(`Unable to parse the event type: \"${type}\"`);\r\n        }\r\n        return { type: parsedType, namespace };\r\n    }\r\n\r\n    //endregion\r\n\r\n    //#region constructor\r\n\r\n    /**\r\n     * @constructs\r\n     * @param {EmitterEventOptions} [options] - The default options for events created by this instance.\r\n     * @param {Emitter} [parentEmitter] - The parent emitter for this instance.\r\n     */\r\n    constructor(options, parentEmitter) {\r\n        this.#emitterEventDefaults = {...this.#emitterEventDefaults, ...options};\r\n        this.#parentEmitter = parentEmitter instanceof Emitter ? parentEmitter : null;\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region properties\r\n\r\n    /**\r\n     * The private field used by the __events__ read-only property.\r\n     * @type {EmitterEvents}\r\n     * @private\r\n     */\r\n    #events = new Map();\r\n\r\n    /**\r\n     * A map of event types to handler arrays for this instance.\r\n     * @type {EmitterEvents}\r\n     * @readonly\r\n     */\r\n    get __events__(){\r\n        return this.#events;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the __emitterEventDefaults__ read-only property.\r\n     * @type {EmitterEventOptions}\r\n     * @private\r\n     */\r\n    #emitterEventDefaults = {\r\n        bubbles: false,\r\n        cancelable: false\r\n    };\r\n\r\n    /**\r\n     * The default options for events created by this instance. Should be set through the constructor call.\r\n     * @type {EmitterEventOptions}\r\n     * @readonly\r\n     */\r\n    get __emitterEventDefaults__(){\r\n        return this.#emitterEventDefaults;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the __parentEmitter__ read-only property.\r\n     * @type {?Emitter}\r\n     * @private\r\n     */\r\n    #parentEmitter = null;\r\n\r\n    /**\r\n     * The parent emitter for this instance.\r\n     * @type {?Emitter}\r\n     * @readonly\r\n     */\r\n    get __parentEmitter__(){\r\n        return this.#parentEmitter;\r\n    }\r\n\r\n    //endregion\r\n\r\n    /**\r\n     * Sets up a function that will be called whenever the specified event is delivered to the target.\r\n     * @param {string} type - A case-sensitive string representing the event type to listen for.\r\n     * @param {EmitterListener} listener - The callback that receives a notification when an event of the specified type occurs.\r\n     * @param {*} [thisArg] - The value of this within the listener.\r\n     */\r\n    #addListener(type, listener, thisArg) {\r\n        if (!isStringNotEmpty(type)) throw new TypeError(\"The 'type' argument must be a non-empty string.\");\r\n        if (!isFunction(listener)) throw new TypeError(\"The 'listener' argument must be a function.\");\r\n        thisArg = thisArg ?? this;\r\n        type.split(\" \").forEach((eventType) => {\r\n            if (!isStringNotEmpty(eventType)) return;\r\n            const parsed = Emitter.parseType(eventType, true);\r\n            let namespaces = this.#events.get(parsed.type);\r\n            if (!namespaces) this.#events.set(parsed.type, (namespaces = new Map()));\r\n            let listeners = namespaces.get(parsed.namespace);\r\n            if (!listeners) namespaces.set(parsed.namespace, (listeners = new Map()));\r\n            let thisArgs = listeners.get(listener);\r\n            if (!thisArgs) listeners.set(listener, (thisArgs = new Set()));\r\n            thisArgs.add(thisArg);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Removes an event listener previously registered with Emitter.addEmitterListener\r\n     * @param {string} type - A string which specifies the type of event for which to remove an event listener.\r\n     * @param {EmitterListener} [listener] - The listener of the event handler to remove. If not supplied all listeners for the event type are removed.\r\n     * @param {*} [thisArg] - The thisArg value of the event handler to remove. If not supplied all listeners that match the listener and event type are removed.\r\n     */\r\n    #removeListener(type, listener, thisArg) {\r\n        if (!isStringNotEmpty(type)) throw new TypeError(\"The 'type' argument must be a non-empty string.\");\r\n        thisArg = thisArg ?? this;\r\n        type.split(\" \").forEach((eventType) => {\r\n            if (!isStringNotEmpty(eventType)) return;\r\n            const parsed = Emitter.parseType(eventType);\r\n            const types = [];\r\n            if (isStringNotEmpty(parsed.type)) {\r\n                types.push(parsed.type);\r\n            } else if (isStringNotEmpty(parsed.namespace)) {\r\n                for (const [type, namespaces] of this.#events){\r\n                    if (!namespaces.has(parsed.namespace)) continue;\r\n                    types.push(type);\r\n                }\r\n            }\r\n            types.forEach((type) => {\r\n                // a type was provided but doesn't exist so do nothing\r\n                if (!this.#events.has(type)) return;\r\n                const namespaces = this.#events.get(type);\r\n                // a namespace was provided but doesn't exist so do nothing\r\n                if (!namespaces.has(parsed.namespace)) return;\r\n                if (isFunction(listener)){\r\n                    const listeners = namespaces.get(parsed.namespace);\r\n                    // a listener was provided but doesn't exist so do nothing\r\n                    if (!listeners.has(listener)) return;\r\n                    if (!isUndefined(thisArg)){\r\n                        const thisArgs = listeners.get(listener);\r\n                        // a thisArg was provided but doesn't exist so do nothing\r\n                        if (!thisArgs.has(thisArg)) return;\r\n                        // remove just the specified thisArg for the type, namespace & listener\r\n                        thisArgs.delete(thisArg);\r\n                        // if the last thisArg was removed then remove the listener\r\n                        if (thisArgs.size === 0) listeners.delete(listener);\r\n                    } else {\r\n                        // no thisArg was provided so just remove the entire listener for the type & namespace\r\n                        listeners.delete(listener);\r\n                    }\r\n                    // if the last listener was removed then remove the namespace\r\n                    if (listeners.size === 0) namespaces.delete(parsed.namespace);\r\n                } else {\r\n                    // no listener was provided so remove all listeners for the type & namespace\r\n                    namespaces.delete(parsed.namespace);\r\n                }\r\n                // if the last namespace was removed then remove the type\r\n                if (namespaces.size === 0) this.#events.delete(type);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The callback executed for each event type and listener parsed from the arguments.\r\n     * @callback forListener~callback\r\n     * @param {string} type\r\n     * @param {EmitterListener} listener\r\n     * @param {*} thisArg\r\n     * @this {Emitter}\r\n     */\r\n    /**\r\n     * Parse and iterate over the arguments supplied to the .on() and .off() methods.\r\n     * @param {IArguments} args\r\n     * @param {forListener~callback} callback\r\n     * @param {*} [thisArg] - The initial value of the thisArg.\r\n     * @private\r\n     */\r\n    #forListener(args, callback, thisArg){\r\n        if (args.length >= 2 && isStringNotEmpty(args[0]) && isFunction(args[1])) {\r\n            // dealing with (type, listener) OR (type, listener, thisArg)\r\n            if (args.length === 3) thisArg = args[2];\r\n            callback.call(this, args[0], args[1], thisArg);\r\n        } else if (args.length >= 1 && isPlainObject(args[0])) {\r\n            // dealing with (EmitterMap) OR (EmitterMap, thisArg)\r\n            if (args.length === 2) thisArg = args[1];\r\n            objForEach(args[0], (type, listener) => {\r\n                callback.call(this, type, listener, thisArg);\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add event listeners to this instance.\r\n     * @param {string|EmitterMap} typeOrTypeMap - A event type string or an object map of event type keys to listener values.\r\n     * @param {EmitterListener|*} [typeListenerOrTypeMapThisArg] - If the first parameter is a string, this should be a listener function. If the first parameter is an object, this is the thisArg to bind all listeners with.\r\n     * @param {*} [typeThisArg] - If the first parameter is a string and the second a listener, this is the thisArg to bind the listener with.\r\n     * @returns {this}\r\n     */\r\n    on(typeOrTypeMap, typeListenerOrTypeMapThisArg, typeThisArg){\r\n        return this.#forListener(arguments, this.#addListener);\r\n    }\r\n\r\n    /**\r\n     * Remove event listeners from this instance.\r\n     * @param {string|EmitterMap} typeOrTypeMap - A event type string or an object map of event type keys to listener values.\r\n     * @param {EmitterListener|*} [typeListenerOrTypeMapThisArg] - If the first parameter is a string, this should be a listener function. If the first parameter is an object, this is the thisArg to bind all listeners with.\r\n     * @param {*} [typeThisArg] - If the first parameter is a string and the second a listener, this is the thisArg to bind the listener with.\r\n     * @returns {this}\r\n     */\r\n    off(typeOrTypeMap, typeListenerOrTypeMapThisArg, typeThisArg){\r\n        return this.#forListener(arguments, this.#removeListener);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {EmitterEvent} event\r\n     * @param {...*} [args]\r\n     * @returns {boolean} Returns true if defaultPrevented was not called.\r\n     */\r\n    emit(event, ...args) {\r\n        if (event instanceof EmitterEvent) {\r\n            if (event.target === null) event.target = this;\r\n            if (event.currenTarget !== this) event.currenTarget = this;\r\n            const emit = (namespaces) => {\r\n                if (!namespaces.has(event.namespace)) return;\r\n                const listeners = namespaces.get(event.namespace);\r\n                for (const [listener, thisArgs] of listeners) {\r\n                    for (const thisArg of thisArgs) {\r\n                        listener.call(thisArg, event, ...args);\r\n                    }\r\n                }\r\n            };\r\n            if (this.#events.has(event.type)) {\r\n                emit(this.#events.get(event.type));\r\n            }\r\n            if (this.#events.has(\"*\")) {\r\n                emit(this.#events.get(\"*\"));\r\n            }\r\n            if (event.bubbles && !event.isPropagationStopped() && this.#parentEmitter instanceof Emitter) {\r\n                return this.#parentEmitter.emit(event, ...args);\r\n            }\r\n            return !event.isDefaultPrevented();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} event\r\n     * @param {Array} [args]\r\n     * @param {EmitterEventOptions} [options]\r\n     * @returns {boolean}\r\n     */\r\n    trigger(event, args, options) {\r\n        if (!isStringNotEmpty(event)) return false;\r\n        args = Array.isArray(args) ? args : [];\r\n        options = defaults(options, this.#emitterEventDefaults);\r\n        return event.split(\" \")\r\n            .map((type) => this.emit(new EmitterEvent(type, options, this), ...args))\r\n            .every((success) => success);\r\n    }\r\n}\r\n\r\nexport default Emitter;","import {isBoolean, isPlainObject, isStringNotEmpty} from \"./is\";\r\nimport Emitter from \"./Emitter\";\r\n\r\n//region type-definitions\r\n\r\n/**\r\n * @typedef {object} EmitterEventOptions\r\n * @property {boolean} [bubbles=false] - Whether or not the event is bubbled.\r\n * @property {boolean} [cancelable=false] - Whether or not the event can be canceled using preventDefault.\r\n */\r\n\r\n//endregion\r\n\r\n/**\r\n * Create a new EmitterEvent instance.\r\n * @class EmitterEvent\r\n * @param {string} type - The type of the event.\r\n * @param {EmitterEventOptions} [options] - The options for the event.\r\n * @param {Emitter} [target] - The target for the event.\r\n * @throws {TypeError} Throws a TypeError if the supplied `type` is invalid.\r\n */\r\nclass EmitterEvent {\r\n\r\n    //#region constructor\r\n\r\n    /**\r\n     * @constructs\r\n     * @param {string} type - The type of the event.\r\n     * @param {EmitterEventOptions} [options] - The options for the event.\r\n     * @param {Emitter} [target] - The target for the event.\r\n     * @throws {TypeError} Throws a TypeError if the supplied `type` is invalid.\r\n     */\r\n    constructor(type, options, target) {\r\n        const parsed = Emitter.parseType(type, true);\r\n        this.#type = parsed.type;\r\n        this.#namespace = parsed.namespace;\r\n        if (isPlainObject(options)){\r\n            this.#bubbles = isBoolean(options.bubbles) ? options.bubbles : false;\r\n            this.#cancelable = isBoolean(options.cancelable) ? options.bubbles : false;\r\n        }\r\n        if (target instanceof Emitter){\r\n            this.#target = this.#currenTarget = target;\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region properties\r\n\r\n    /**\r\n     * The private field used by the type read-only property.\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    #type;\r\n    /**\r\n     * The type of event.\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    get type(){\r\n        return this.#type;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the namespace read-only property.\r\n     * @type {?string}\r\n     * @private\r\n     */\r\n    #namespace = null;\r\n    /**\r\n     * The namespace of the event.\r\n     * @type {?string}\r\n     * @readonly\r\n     * @default null\r\n     */\r\n    get namespace(){\r\n        return this.#namespace;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the bubbles read-only property.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    #bubbles = false;\r\n    /**\r\n     * Whether or not the event is bubbled.\r\n     * @type {boolean}\r\n     * @readonly\r\n     * @default false\r\n     */\r\n    get bubbles(){\r\n        return this.#bubbles;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the cancelable read-only property.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    #cancelable = false;\r\n    /**\r\n     * Whether or not the event is cancelable.\r\n     * @type {boolean}\r\n     * @readonly\r\n     * @default false\r\n     */\r\n    get cancelable(){\r\n        return this.#cancelable;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the defaultPrevented readonly property.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    #defaultPrevented = false;\r\n    /**\r\n     * Whether or not the event is cancelable and preventDefault has been called.\r\n     * @type {boolean}\r\n     * @readonly\r\n     * @default false\r\n     */\r\n    get defaultPrevented(){\r\n        return this.#defaultPrevented;\r\n    }\r\n\r\n    /**\r\n     * The private field used by the target readonly property.\r\n     * @type {?Emitter}\r\n     * @private\r\n     */\r\n    #target = null;\r\n    /**\r\n     * The emitter that initially raised the event.\r\n     * @type {?Emitter}\r\n     * @default null\r\n     */\r\n    get target(){\r\n        return this.#target;\r\n    }\r\n\r\n    /**\r\n     * Set the emitter that raised the event.\r\n     * @param {Emitter} emitterInstance\r\n     * @throws {TypeError} Throws a TypeError if the value is not an instance of Emitter.\r\n     */\r\n    set target(emitterInstance){\r\n        if (emitterInstance instanceof Emitter){\r\n            this.#target = emitterInstance;\r\n            return;\r\n        }\r\n        throw new TypeError(\"The EmitterEvent.target must be an instance of Emitter.\");\r\n    }\r\n\r\n    /**\r\n     * The private field used by the currenTarget readonly property.\r\n     * @type {?Emitter}\r\n     * @private\r\n     */\r\n    #currenTarget = null;\r\n    /**\r\n     * The emitter currently raising the event.\r\n     * @type {?Emitter}\r\n     * @default null\r\n     */\r\n    get currenTarget(){\r\n        return this.#currenTarget;\r\n    }\r\n\r\n    /**\r\n     * Set the emitter currently raising the event.\r\n     * @param {Emitter} emitterInstance\r\n     * @throws {TypeError} Throws a TypeError if the value is not an instance of Emitter.\r\n     */\r\n    set currenTarget(emitterInstance){\r\n        if (emitterInstance instanceof Emitter){\r\n            this.#currenTarget = emitterInstance;\r\n            return;\r\n        }\r\n        throw new TypeError(\"The EmitterEvent.currenTarget must be an instance of Emitter.\");\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //region methods\r\n\r\n    /**\r\n     * Specifies the default action should not be taken. Calling this method on a non-cancelable event has no effect.\r\n     */\r\n    preventDefault() {\r\n        if (!this.cancelable) return;\r\n        this.#defaultPrevented = true;\r\n    }\r\n\r\n    /**\r\n     * Whether or not the default action should not be taken.\r\n     * @returns {boolean}\r\n     */\r\n    isDefaultPrevented() {\r\n        return this.defaultPrevented;\r\n    }\r\n\r\n    #propagationStopped = false;\r\n    stopPropagation(){\r\n        this.#propagationStopped = true;\r\n    }\r\n\r\n    isPropagationStopped(){\r\n        return this.#propagationStopped;\r\n    }\r\n\r\n    //endregion\r\n\r\n}\r\n\r\nexport default EmitterEvent;","function debounce(func, timeout = 300){\r\n    let timer;\r\n    return (...args) => {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => func.apply( this, args ), timeout);\r\n    };\r\n}\r\n\r\nexport default debounce;","/**\r\n * @typedef {Object} ResizeObserverSize\r\n * @property {number} inlineSize\r\n * @property {number} blockSize\r\n * @property {number} width\r\n * @property {number} height\r\n */\r\n/**\r\n * @typedef {Object} ResizeObserverEntry\r\n * @property {ResizeObserverSize|Array<ResizeObserverSize>|undefined} contentBoxSize\r\n * @property {DOMRect} contentRect\r\n */\r\n/**\r\n * Gets the width and height from the ResizeObserverEntry\r\n * @param {ResizeObserverEntry} entry - The entry to retrieve the size from.\r\n * @returns {{width: Number,height: Number}}\r\n */\r\nfunction getResizeObserverEntrySize( entry ) {\r\n    let width, height;\r\n    if ( entry.contentBoxSize ) {\r\n        // Checking for chrome as using a non-standard array\r\n        if ( entry.contentBoxSize[ 0 ] ) {\r\n            width = entry.contentBoxSize[ 0 ].inlineSize;\r\n            height = entry.contentBoxSize[ 0 ].blockSize;\r\n        } else {\r\n            width = entry.contentBoxSize.inlineSize;\r\n            height = entry.contentBoxSize.blockSize;\r\n        }\r\n    } else {\r\n        width = entry.contentRect.width;\r\n        height = entry.contentRect.height;\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height\r\n    };\r\n}\r\n\r\nexport default getResizeObserverEntrySize;","/**\r\n *\r\n * @param {function} callback\r\n * @param {...*} [args]\r\n * @returns {Promise<*>}\r\n */\r\nasync function doCallback(callback, ...args){\r\n    return new Promise((resolve) => {\r\n        setTimeout(()=>{\r\n            resolve(callback(...args));\r\n        }, 0);\r\n    });\r\n}\r\n\r\n/**\r\n *\r\n * @param callback\r\n */\r\nfunction enqueue(callback){\r\n    setTimeout(callback, 0);\r\n}\r\n\r\n/**\r\n *\r\n * @template T\r\n * @param {Iterable<T>} iterable\r\n * @param {function(T)} callback\r\n * @returns {Promise<void>}\r\n */\r\nasync function asyncForEach(iterable, callback){\r\n    for (const i of iterable){\r\n        await doCallback(callback, i);\r\n    }\r\n}\r\n\r\nexport {\r\n    enqueue,\r\n    asyncForEach\r\n};","import * as is from \"./is\";\r\nimport * as obj from \"./object\"\r\n\r\nexport default {\r\n    is,\r\n    obj\r\n};","/**\r\n * Check if the value is a boolean.\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction isBoolean(value){\r\n    return value != null && '[object Boolean]' === Object.prototype.toString.call(value);\r\n}\r\n\r\n/**\r\n * Check if the value is a function.\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction isFunction(value){\r\n    return value != null && (Object.prototype.toString.call(value) === \"[object Function]\" || typeof value === \"function\" || value instanceof Function);\r\n}\r\n\r\n/**\r\n * Check if the value is a number.\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction isNumber(value){\r\n    return value != null && '[object Number]' === Object.prototype.toString.call(value) && !isNaN(value);\r\n}\r\n\r\n/**\r\n * Check if the value is an object.\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction isObject(value){\r\n    return value != null && typeof value === \"object\";\r\n}\r\n\r\n/**\r\n * Check if the value is a plain object.\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction isPlainObject(value){\r\n    if (isObject(value)){\r\n        const proto = Object.getPrototypeOf(value);\r\n        return proto === Object.prototype || proto === null;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Check if the value is a promise.\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction isPromise(value){\r\n    return value != null && value instanceof Promise;\r\n}\r\n\r\n/**\r\n * Check if the value is a string.\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction isString(value){\r\n    return value != null && '[object String]' === Object.prototype.toString.call(value);\r\n}\r\n\r\nconst isEmptyString = /^\\s*$/;\r\n/**\r\n * Check if the value is a string and is not empty.\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction isStringNotEmpty(value){\r\n    return isString(value) && !isEmptyString.test(value);\r\n}\r\n\r\n/**\r\n * Check if the value is a undefined.\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction isUndefined(value){\r\n    return typeof value === \"undefined\";\r\n}\r\n\r\nexport {\r\n    isBoolean,\r\n    isFunction,\r\n    isNumber,\r\n    isObject,\r\n    isPlainObject,\r\n    isPromise,\r\n    isString,\r\n    isStringNotEmpty,\r\n    isUndefined\r\n};","import {isStringNotEmpty} from \"./is\";\r\n\r\n/**\r\n * If the value is a string it is returned, if it's a string array the values are joined using a comma, otherwise null is returned.\r\n * @param {*} value\r\n * @returns {?string}\r\n */\r\nfunction makeSelector(value){\r\n    if (isStringNotEmpty(value)) {\r\n        return value;\r\n    }\r\n    if (Array.isArray(value) && value.length) {\r\n        const result = value.filter((val) => isStringNotEmpty(val)).join(\",\");\r\n        return isStringNotEmpty(result) ? result : null;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default makeSelector;","import {isFunction} from \"./is\";\r\n\r\n/**\r\n * @template T\r\n * @param {Array<T>} target\r\n * @param {Array<T>} source\r\n * @param {function(T, T):boolean} [equalityComparer]\r\n * @returns {Array<T>}\r\n */\r\nfunction mergeArray(target, source, equalityComparer){\r\n    if (isFunction(equalityComparer)){\r\n        return [...target, ...source.filter((sourceValue) => !target.some((targetValue) => equalityComparer(targetValue, sourceValue)))];\r\n    }\r\n    return [...target, ...source.filter((targetValue) => !target.includes(targetValue))];\r\n}\r\n\r\nexport default mergeArray;","import { isObject, isPlainObject, isStringNotEmpty, isUndefined } from \"./is\";\r\n\r\nfunction hasProperty(target, propertyName){\r\n    if (isPlainObject(target) && isStringNotEmpty(propertyName)){\r\n        if (propertyName.indexOf(\".\") !== -1){\r\n            const names = propertyName.split(\".\"), length = names.length, last = length - 1;\r\n            let index = 0, currentTarget = target;\r\n            for (; index < length; index++){\r\n                const name = names[index];\r\n                if (index === last){\r\n                    return currentTarget.hasOwnProperty(name);\r\n                } else if (isPlainObject(currentTarget[name])) {\r\n                    currentTarget = currentTarget[name];\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        } else {\r\n            return target.hasOwnProperty(propertyName);\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Remove a property from an object.\r\n * @param {object} target\r\n * @param {string} propertyName\r\n */\r\nfunction removeProperty(target, propertyName){\r\n    if (isPlainObject(target) && isStringNotEmpty(propertyName)){\r\n        if (propertyName.indexOf(\".\") !== -1){\r\n            const names = propertyName.split(\".\"), length = names.length, last = length - 1;\r\n            let index = 0, currentTarget = target;\r\n            for (; index < length; index++){\r\n                const name = names[index];\r\n                if (index === last){\r\n                    delete currentTarget[name];\r\n                } else if (isPlainObject(currentTarget[name])) {\r\n                    currentTarget = currentTarget[name];\r\n                }\r\n            }\r\n        } else {\r\n            delete target[propertyName];\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Get the value of a property from an object.\r\n * @param {object} target\r\n * @param {string} propertyName\r\n * @param {*} [defaultValue]\r\n * @returns {*}\r\n */\r\nfunction getProperty(target, propertyName, defaultValue){\r\n    if (isPlainObject(target) && isStringNotEmpty(propertyName)){\r\n        if (propertyName.indexOf(\".\") !== -1){\r\n            const names = propertyName.split(\".\"), length = names.length, last = length - 1;\r\n            let index = 0, currentTarget = target;\r\n            for (; index < length; index++){\r\n                const name = names[index];\r\n                if (index === last){\r\n                    if (currentTarget.hasOwnProperty(name)){\r\n                        return currentTarget[name];\r\n                    }\r\n                } else if (isPlainObject(currentTarget[name])) {\r\n                    currentTarget = currentTarget[name];\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else if (target.hasOwnProperty(propertyName)){\r\n            return target[propertyName];\r\n        }\r\n    }\r\n    return defaultValue;\r\n}\r\n\r\n/**\r\n * Set the value of a property in an object.\r\n * @param {object} target\r\n * @param {string} propertyName\r\n * @param {*} value\r\n * @returns {boolean}\r\n */\r\nfunction setProperty(target, propertyName, value){\r\n    if (isPlainObject(target) && isStringNotEmpty(propertyName) && !isUndefined(value)){\r\n        if (propertyName.indexOf(\".\") !== -1){\r\n            const names = propertyName.split(\".\"), length = names.length, last = length - 1;\r\n            let index = 0, currentTarget = target;\r\n            for (; index < length; index++){\r\n                const name = names[index];\r\n                if (index === last){\r\n                    currentTarget[name] = value;\r\n                    return true;\r\n                } else if (isPlainObject(currentTarget[name])) {\r\n                    currentTarget = currentTarget[name];\r\n                } else if (isUndefined(currentTarget[name])) {\r\n                    currentTarget = currentTarget[name] = {};\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            target[propertyName] = value;\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Merge the properties of the source object into the target object replacing existing values.\r\n * @param {object} target - The object that will receive the properties.\r\n * @param {object} source - The object to extract properties from.\r\n * @returns {object}\r\n */\r\nfunction merge(target, source) {\r\n    target = isPlainObject(target) ? target : {};\r\n    if (isPlainObject(target) && isPlainObject(source)){\r\n        objForEach(source, (key, value) => {\r\n            if (isPlainObject(value)){\r\n                // if the source value is an object, merge it into the target key\r\n                target[key] = merge(target[key], value);\r\n            } else if (Array.isArray(value)){\r\n                // if the source value is an array, replace the target key with a shallow copy of it\r\n                target[key] = value.slice();\r\n            } else {\r\n                // otherwise replace the target key with the source value\r\n                target[key] = value;\r\n            }\r\n        });\r\n    }\r\n    // always return the original target object\r\n    return target;\r\n}\r\n\r\n/**\r\n * Merge the properties of all source objects into the target object replacing existing values.\r\n * @param {object} target\r\n * @param {...object} sources\r\n * @returns {object}\r\n */\r\nfunction extend(target, ...sources) {\r\n    target = isPlainObject(target) ? target : {};\r\n    return sources.reduce((result, source) => merge(result, source), target);\r\n}\r\n\r\n/**\r\n * Merge the properties of the source object into the target object if they do not exist.\r\n * @param {object} target - The object that will receive the properties.\r\n * @param {object} source - The object to extract properties from.\r\n * @returns {object}\r\n */\r\nfunction mergeMissing(target, source){\r\n    target = isPlainObject(target) ? target : {};\r\n    if (isPlainObject(source)){\r\n        objForEach(source, (key, value) => {\r\n            const missing = !target.hasOwnProperty(key);\r\n            if (isPlainObject(value)){ // if the source value is an object\r\n                if (isPlainObject(target[key])){ // and the target key is an object, merge the missing source properties\r\n                    target[key] = mergeMissing(target[key], value);\r\n                } else if (missing) { // otherwise if its missing, set the target key to the source value\r\n                    target[key] = merge({}, value);\r\n                }\r\n            } else if (missing) {\r\n                // if its just missing and not a special case, set the target key with the missing source value\r\n                target[key] = value;\r\n            }\r\n        });\r\n    }\r\n    // always return the original target object\r\n    return target;\r\n}\r\n\r\n/**\r\n * Merge the properties of all source objects into the target object if they do not exist.\r\n * @param {object} target\r\n * @param {...object} sources\r\n * @returns {object}\r\n */\r\nfunction defaults(target, ...sources){\r\n    target = isPlainObject(target) ? target : {};\r\n    return sources.reduce((result, source) => mergeMissing(result, source), target);\r\n}\r\n\r\n/**\r\n * @callback objForEach~callback\r\n * @param {string} key\r\n * @param {*} value\r\n */\r\n\r\n/**\r\n * Iterates all keys of the target and executes the callback for each supplying the current key and value.\r\n * @param {object} target - The target object to iterate.\r\n * @param {objForEach~callback} callback - The callback to execute.\r\n */\r\nfunction objForEach(target, callback){\r\n    if ( !isObject( target ) ) return;\r\n    Object.keys(target).forEach((key) => {\r\n        callback.call(this, key, target[key]);\r\n    });\r\n}\r\n\r\n/**\r\n * A \"reducer\" function that can take up to four arguments.\r\n * @callback objReduce~callback\r\n * @template T\r\n * @param {T} previousValue - The value resulting from the previous call to the callback.\r\n * @param {*} value - The value of the current key.\r\n * @param {string} [key] - The current key of the object.\r\n * @param {object} [object] - The object being iterated.\r\n * @returns {T}\r\n */\r\n/**\r\n * The objReduce() method executes a user-supplied “reducer” callback function on each key~value pair of the target object,\r\n * passing in the return value from the calculation on the preceding pair. The final result of running the reducer across\r\n * all key~value pairs of the target object is a single value.\r\n * @template T\r\n * @param {object} target - The object to reduce.\r\n * @param {objReduce~callback<T>} callbackFn - A \"reducer\" function that takes four arguments.\r\n * @param {T} [initialValue] - A value to which \"previousValue\" is initialized the first time the callback is called.\r\n * @returns {T} The value that results from running the “reducer” callback function to completion over the entire object.\r\n */\r\nfunction objReduce(target, callbackFn, initialValue){\r\n    return isObject( target ) ? Object.keys(target).reduce((previousValue, key) => {\r\n        return callbackFn.call(this, previousValue, target[key], key);\r\n    }, initialValue) : initialValue;\r\n}\r\n\r\nexport {\r\n    objForEach,\r\n    objReduce,\r\n    hasProperty,\r\n    removeProperty,\r\n    getProperty,\r\n    setProperty,\r\n    merge,\r\n    extend,\r\n    mergeMissing,\r\n    defaults\r\n};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"foobox\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfoobox\"] = self[\"webpackChunkfoobox\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/public/foobox/index.pro.js\");\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["extend","isNumber","Container","parser","ref","options","triggerTarget","items","constructor","EventTarget","value","TypeError","firstIndex","length","lastIndex","withinRange","index","getByIndex","getFirst","getLast","getNext","current","allowLoop","indexOf","nextIndex","getPrevious","previousIndex","Symbol","toStringTag","isStringNotEmpty","asyncForEach","Parser","PARSER_DEFAULTS","PARSER_DEFAULTS_PRO","GROUP_PARSER_DEFAULTS","priority","include","GROUP_PARSER_DEFAULTS_PRO","GroupParser","parseDocument","handledRefs","nocache","results","config","selector","has","container","parse","push","add","purgeCache","shouldPurge","create","trigger","getArgs","itemRefs","document","querySelectorAll","Item","parent","type","requiredProperties","getProperties","properties","name","objReduce","isFunction","isPlainObject","makeSelector","Emitter","TypeParser","__types__","exclude","data","defaultProperties","obj","elem","required","test","image","iframe","video","DEFINITION","configuration","ctor","Array","isArray","plugin","definition","def","createAll","parserDefinitions","reduce","result","sort","a","b","bubbles","includeSelector","excludeSelector","types","typesSelector","map","containerCache","Map","dataCache","isDocumentParser","includes","HTMLElement","matches","excludes","canParse","get","dataConfig","dataName","key","dataset","hasOwnProperty","JSON","err","console","error","set","values","delete","cached","parseItems","changes","compareItems","added","removed","refs","item","parseItem","find","filter","defaults","isString","Plugin","on","onAddedContainer","onRemovedContainer","onUpdatedContainer","__parsers__","observer","containers","triggers","parsers","RS_DEFAULT","RS_INITIALIZING","RS_INITIALIZED","RS_READY","readyStateValue","readyState","#readyState","RangeError","documentDispatch","states","init","observe","event","CustomEvent","detail","Event","dispatchEvent","watch","MutationObserver","childList","subtree","unobserve","disconnect","registerParser","Parser_ctor","unregisterParser","removeTriggerListener","eventTarget","listener","removeEventListener","addTriggerListener","e","preventDefault","addEventListener","getDocumentParsers","getRefParser","getAll","from","elementRef","querySelector","getRefs","excludeRef","Set","forEach","Promise","resolve","#onAddedContainer","#onUpdatedContainer","#onRemovedContainer","mergeArray","PropertyParser","DEFAULT_CONVERT","property","DEFAULT_TEST","defaultValue","MERGE_DEFINITIONS","target","source","targetDefinition","sourceDefinition","targetDef","sourceDef","typeParser","propertyParserDefinitions","propertyParser","getValues","getValue","convert","queryParent","queryPath","queryType","query","objectQuery","elementQuery","cache","path","parts","split","pop","part","raw","targetRef","parents","slice","i","parentElement","hasAttribute","getAttribute","prop","typeParserDefinitions","requiredPropertyCache","propertyCache","getTrigger","getRequiredProperties","utils","ModalElement","default","groups","HTMLDialogElement","root","ownerDocument","documentElement","inner","show","setAttribute","showModal","hide","removeAttribute","close","onClick","currentTarget","onCloseClick","customElements","define","extends","getResizeObserverEntrySize","debounce","InnerElement","ResizeObserver","onResize","bind","entries","entry","size","doResize","log","connectedCallback","isConnected","disconnectedCallback","overlay","cover","toggleAttribute","Boolean","ItemsElement","child","children","isBoolean","CaptionElement","observedAttributes","attachShadow","mode","append","header","section","createElement","toolbar","innerHTML","toggle","slot","open","description","position","attributeChangedCallback","oldValue","newValue","force","ImageElement","img","src","srcset","zoom","style","setProperty","doZoom","scale","complete","maxZoom","naturalWidth","Math","max","round","clientWidth","Number","parseInt","isNaN","maxSize","width","height","clientHeight","restrict","naturalHeight","ratioX","ratioY","ItemElement","OverlayElement","isUndefined","EmitterEvent","objForEach","EVENT_TYPE_NAMESPACE_SEPARATOR","parseType","namespace","parsedType","n_index","parentEmitter","emitterEventDefaults","events","__events__","cancelable","__emitterEventDefaults__","__parentEmitter__","addListener","#addListener","thisArg","eventType","parsed","namespaces","listeners","thisArgs","removeListener","#removeListener","forListener","#forListener","args","callback","call","typeOrTypeMap","typeListenerOrTypeMapThisArg","typeThisArg","arguments","off","emit","currenTarget","isPropagationStopped","isDefaultPrevented","every","success","defaultPrevented","emitterInstance","propagationStopped","stopPropagation","func","timeout","timer","clearTimeout","setTimeout","apply","contentBoxSize","inlineSize","blockSize","contentRect","doCallback","enqueue","iterable","is","Object","prototype","toString","Function","isObject","proto","getPrototypeOf","isPromise","isEmptyString","val","join","equalityComparer","sourceValue","some","targetValue","hasProperty","propertyName","names","last","removeProperty","getProperty","merge","sources","mergeMissing","missing","keys","callbackFn","initialValue","previousValue"],"sourceRoot":""}